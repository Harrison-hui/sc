{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/","title":"\u57fa\u672c\u6982\u5ff5","text":""},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#_2","title":"\u56fe\u89e3","text":""},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#ndarray","title":"\u6570\u7ec4\uff08ndarray\uff09","text":"<ol> <li> <p>\u4e00\u7ef4\u6570\u7ec4\u3010\u5217\u8868\u3011</p> <p>\u7c7b\u4f3c\u5217\u8868\uff0c\u4f46\u6570\u7ec4\u5207\u7247\u9488\u5bf9\u539f\u59cb\u6570\u636e</p> </li> <li> <p>\u4e8c\u7ef4\u6570\u7ec4\uff08\u77e9\u9635\uff09\u3010\u5173\u4e8e\u4e00\u7ef4\u6570\u7ec4\u7684\u5217\u8868\u3011</p> <p>\u4ee5\u6570\u7ec4\u4e3a\u5143\u7d20\u7684\u6570\u7ec4\uff0c\u5305\u62ec\u884c\u548c\u5217\uff0c\u7c7b\u4f3c\u8868\u683c</p> </li> <li> <p>\u4e09\u7ef4\u6570\u7ec4\uff08\u77e9\u9635\u5217\u8868\uff09\u3010\u5173\u4e8e\u4e8c\u7ef4\u6570\u7ec4\u7684\u5217\u8868\u3011 \u6700\u5e38\u89c1\u7684\u591a\u7ef4\u6570\u7ec4\u3002\u6307\u7ef4\u6570\u4e3a3\u7684\u6570\u7ec4\u7ed3\u6784\uff0c\u53ef\u7528\u6765\u63cf\u8ff0\u4e09\u7ef4\u7a7a\u95f4\u4e2d\u7684\u4f4d\u7f6e\u6216\u72b6\u6001</p> </li> <li> <p>\u7ed3\u6784\u5316\u6570\u7ec4 \u7528\u4e8e\u5904\u7406\u5f02\u8d28\u6570\u636e\u7684\u91cd\u8981\u5de5\u5177\uff0c\u901a\u8fc7\u5b9a\u4e49\u590d\u6742\u7684\u6570\u636e\u7c7b\u578b\uff0c\u53ef\u4ee5\u521b\u5efa\u5177\u6709\u4e0d\u540c\u5b57\u6bb5\u7684\u6570\u7ec4\uff0c\u7c7b\u4f3c\u4e8e\u8868\u683c\u6216\u6570\u636e\u5e93\u4e2d\u7684\u884c\u3002\u7ed3\u6784\u5316\u6570\u7ec4\u63d0\u4f9b\u4e86\u8bbf\u95ee\u3001\u4fee\u6539\u3001\u6392\u5e8f\u548c\u6761\u4ef6\u7b5b\u9009\u6570\u636e\u7684\u7075\u6d3b\u6027\uff0c\u540c\u65f6\u4e5f\u65b9\u4fbf\u4e0e Pandas DataFrame \u8fdb\u884c\u4ea4\u4e92</p> </li> </ol>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#axis","title":"\u8f74\uff08axis\uff09","text":"<p>\u6307\u5b9a\u6570\u7ec4\u7684\u67d0\u4e2a\u8f74\u53ef\u4ee5\u6cbf\u8be5\u8f74\u505a\u76f8\u5173\u64cd\u4f5c\uff08\u5177\u4f53\u5982\u4e0a\u56fe\uff09 \u5bf9\u4e8e\u4e00\u7ef4\u6570\u7ec4\uff0c\u7531\u4e8e\u65e0\u6cd5\u4ece\u4e0a\u81f3\u4e0b\u64cd\u4f5c\uff0c\u56e0\u6b64\u5176\u53ea\u6709\u6c34\u5e73\u8f74\uff0c\u5373\u5176\u8f740\u4e3a\u6c34\u5e73\u8f74\uff08\u5177\u4f53\u5982\u4e0a\u56fe\uff09</p>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#broadcast","title":"\u5e7f\u64ad\u673a\u5236\uff08broadcast\uff09","text":""},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#_3","title":"\u57fa\u7840\u521b\u5efa","text":""},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#array","title":"array\u51fd\u6570","text":"<p><code>array\uff08object, dtype=None, copy=True, ndmin=0, order=\"K\", subok=False, like=None\uff09</code></p> <ol> <li> <p>object: \u4efb\u4f55\u5177\u6709\u6570\u7ec4\u63a5\u53e3\u65b9\u6cd5\u7684\u5bf9\u8c61\uff08\u6570\u7ec4\u3001\u5217\u8868\u3001\u5143\u7ec4\u7b49\uff0c\u4e3b\u8981\u662f\u5217\u8868\u548c\u6570\u7ec4\uff09</p> </li> <li> <p>dtype: \u6570\u636e\u7c7b\u578b\u3002\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4e0d\u540c\u5b57\u6bb5\u548c\u6570\u636e\u7c7b\u578b\u4ee5\u521b\u5efa\u7ed3\u6784\u5316\u6570\u7ec4</p> <p>dtype</p> <pre><code>bool_(bool8\u3001\"?\")\u30108\u4f4d\u5e03\u5c14\u7c7b\u578b\u3011\n\nnumber\n\n    integer\n\n        signedinteger\u3010\u6709\u7b26\u53f7\u6574\u6570\u3011\n\n            int64\uff08intp\u3001int0\u3001longlong\u3001\"l\"\uff09\u301064\u4f4d\uff08-9223372036854775808~9223372036854775807\uff09\u3011\n\n            int32(int_\u3001intc\u3001\"i\")\u301032\u4f4d\u3011\n\n            int16(short\u3001\"h\")\u301016\u4f4d\uff08-32768~32767\uff09\u3011\n\n            int8(byte\u3001\"b\")\u30108\u4f4d\uff08-128~127\uff09\u3011\n\n            timedelta64\u3010\u4e24\u4e2a\u65f6\u95f4\u4e4b\u95f4\u7684\u95f4\u9694\u3011\n\n        unsignedinteger\u3010\u65e0\u7b26\u53f7\u6574\u6570\u3011\n\n            uint64(uintp\u3001uint0\u3001ulonglong)\u301064\u4f4d\uff080~18446744073709551615\uff09\u3011\n\n            uint32(uint\u3001uintc)\u301032\u4f4d\uff080~4294967295\uff09\u3011\n\n            uint16(ushort)\u301016\u4f4d\uff080~65535\uff09\u3011\n\n            uint8(ubyte)\u30108\u4f4d\uff080~255\uff09\u3011\n\n    inexact\n\n        complexfloating\n\n            longcomplex(clongfloat\u3001clongdouble)\u3010\u4e24\u4e2a128\u4f4d\u6d6e\u70b9\u6570\u3011\n\n            complex_(complex128\u3001cfloat\u3001cdouble)\u3010\u4e24\u4e2a64\u4f4d\u6d6e\u70b9\u6570\u3011\n\n            singlecomplex(csingle\u3001complex64)\u3010\u4e24\u4e2a32\u4f4d\u6d6e\u70b9\u6570\u3011\n\n        floating\n\n            longfloat(longdouble\u3001\"g\")\u3010128\u4f4d\u6d6e\u70b9\u6570\u3011\n\n            float64(float_\u3001double\u3001\"d\")\u3010\u53cc\u7cbe\u5ea6\u6d6e\u70b9\uff1a1\u4e2a\u7b26\u53f7\u4f4d\uff0c11\u4f4d\u6307\u6570\uff0c52\u4f4d\u5c3e\u6570\u3011\n\n            float32(single\u3001\"f\")\u3010\u5355\u7cbe\u5ea6\u6d6e\u70b9\uff1a1\u4e2a\u7b26\u53f7\u4f4d\uff0c8\u4f4d\u6307\u6570\uff0c23\u4f4d\u5c3e\u6570\u3011\n\n            float16(half)\u3010\u534a\u7cbe\u5ea6\u6d6e\u70b9\uff1a1\u4e2a\u7b26\u53f7\u4f4d\uff0c5\u4f4d\u6307\u6570\uff0c10\u4f4d\u5c3e\u6570\u3011\n\nflexible\n\n    character\n\n        string_(bytes_\u3001bytes0)\n\n        unicode_(str_\u3001str0)\n\n    void0(void)\n\ndatetime64\u3010\u65e5\u671f\u65f6\u95f4\u7c7b\u578b\u3011\n\nobject_(object0\u3001\"O\")\u3010\u4efb\u4f55python\u5bf9\u8c61\u3011\n</code></pre> </li> <li> <p>copy: \u662f\u5426\u590d\u5236\u539f\u6570\u7ec4\u3002\u9ed8\u8ba4\u4e3aTrue</p> </li> <li> <p>ndmin: \u6307\u5b9a\u6700\u5c0f\u7ef4\u5ea6</p> </li> <li> <p>subok: \u662f\u5426\u4ece\u5b50\u7c7b\u521b\u5efa\u6570\u7ec4\u3002\u9ed8\u8ba4\u4e3aFalse\uff0c\u5373\u5f3a\u5236\u521b\u5efa\u57fa\u7c7b\u6570\u7ec4</p> </li> <li> <p>order: \u5143\u7d20\u5728\u5185\u5b58\u4e2d\u7684\u5b58\u50a8\u987a\u5e8f\uff0c\u503c\u4e3a\"K\"\u3001\"A\"\u3001\"C\"\u3001\"F\" \u82e5object\u53c2\u6570\u4e3a\u975e\u6570\u7ec4\uff0c\u5176\u503c\u53ef\u4e3a\"K\"\u3001\"C\"\u3001\"F\" \u82e5object\u53c2\u6570\u4e3a\u6570\u7ec4\uff0c\u5176\u503c\u5747\u53ef\u53d6 \"K\": \u5143\u7d20\u5728\u5185\u5b58\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f \"A\": \u539f\u987a\u5e8f \"C\": \u6309\u884c \"F\": \u6309\u5217</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code># \u7b80\u5355\u521b\u5efa\nn0 = np.array([1, 2, 3, 4])       # \u4e00\u7ef4\u6570\u7ec4\n\"\"\"\n[1 2 3 4]\n\"\"\"\n\nn1 = np.array([[1, 2], [3, 4]])   # \u4e8c\u7ef4\u6570\u7ec4\n\"\"\"\n[[1 2]\n [3 4]]\n \"\"\"\n\nn2 = np.array([[[1, 2, 3, 4], [5, 6, 7, 8]], [[\"a\", \"b\", \"c\", \"d\"], [\"e\", \"f\", \"g\", \"h\"]]])    # \u4e09\u7ef4\u6570\u7ec4\n\"\"\"\n[[['1' '2' '3' '4']\n  ['5' '6' '7' '8']]\n\n [['a' 'b' 'c' 'd']\n  ['e' 'f' 'g' 'h']]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6edtype\nn3 = np.array([1, 2, 3, 4], dtype=np.float_)\nprint(n3, n3.dtype, type(n3[0]))\n\"\"\"\n[1. 2. 3. 4.] float64 &lt;class 'numpy.float64'&gt;\n\"\"\"\n\nn4 = np.array([1, 2, 3, 4], dtype=np.intp)\nprint(n4, n4.dtype, type(n4[0]))\n\"\"\"\n[1 2 3 4] int64 &lt;class 'numpy.int64'&gt;\n\"\"\"\n\nn5 = np.array([1, 2, 3, 4], dtype=np.complex_)\nprint(n5, n5.dtype, type(n5[0]))\n\"\"\"\n[1.+0.j 2.+0.j 3.+0.j 4.+0.j] complex128 &lt;class 'numpy.complex128'&gt;\n\"\"\"\n\n\n\n# \u8bbe\u7f6ecopy\nn0 = np.array([1, 2, 3, 4])\nn6 = np.array(n0, copy=True)    # \u590d\u5236\u539f\u6570\u7ec4\uff0c\u4e0e\u539f\u6570\u7ec4\u72ec\u7acb\nn6[0] = 0\nn0[1] = 20\nprint(n6, n0)\n\"\"\"\n[0 2 3 4] [ 1 20  3  4]\n\"\"\"\n\nn0 = np.array([1, 2, 3, 4])\nn7 = np.array(n0, copy=False)   # \u4e0d\u590d\u5236\u539f\u6570\u7ec4\uff0c\u4e0e\u539f\u6570\u7ec4\u5173\u8054\nn7[0] = 0\nn0[1] = 20\nprint(n7, n0)\n\"\"\"\n[ 0 20  3  4] [ 0 20  3  4]\n\"\"\"\n\n\n\n# \u8bbe\u7f6endmin\nn8 = np.array([[1, 2], [3, 4]], ndmin=2)    # \u4e8c\u7ef4\n\"\"\"\n[[1 2]\n [3 4]]\n\"\"\"\n\nn9 = np.array([[1, 2], [3, 4]], ndmin=3)    # \u4e09\u7ef4\n\"\"\"\n[[[1 2]\n  [3 4]]]\n\"\"\"\n\n# \u7ed3\u6784\u5316\u6570\u7ec4\u7684\u521b\u5efa\ndtype = np.dtype([('name', 'S10'), ('age', int), ('height', float)])\ndata = np.array([('Alice', 25, 5.6), ('Bob', 30, 6.0)], dtype=dtype)\n\"\"\"\n[(b'Alice', 25, 5.6) (b'Bob', 30, 6. )]\n\"\"\"\n\ndtype_nested = np.dtype([('info', [('name', 'S10'), ('age', int)]), ('height', float)])\ndata_nested = np.array([(('Alice', 25), 5.6), (('Bob', 30), 6.0)], dtype=dtype_nested)\n\"\"\"\n[((b'Alice', 25), 5.6) ((b'Bob', 30), 6. )]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#_4","title":"\u586b\u5145\u521b\u5efa","text":""},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#empty","title":"empty\u51fd\u6570","text":"<p>\u521b\u5efa\u6307\u5b9a\u5f62\u72b6\uff0c\u672a\u521d\u59cb\u5316\u7684\u6570\u7ec4\uff0c\u5143\u7d20\u4e3a\u968f\u673a\u503c</p> <p><code>empty(shape, dtype=numpy.float64, order=\"C\", like=None)</code></p> <ol> <li> <p>shape: \u521b\u5efa\u7684\u6570\u7ec4\u7684\u5f62\u72b6\u3002\u53ef\u4ee5\u662f\u6574\u6570\u6216\u6574\u6570\u5e8f\u5217</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3anumpy.float64</p> </li> <li> <p>order: \u540c\u4e0a\u3002\"C\"\u548c\"F\"\u53ef\u9009\uff0c\u9ed8\u8ba4\"C\"</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>n10 = np.empty(5)\n\"\"\"\n[0.   0.25 0.5  0.75 1.  ]\n\"\"\"\n\nn11 = np.empty([4, 3])\n\"\"\"\n[[0. 0. 1.]\n [1. 1. 1.]\n [1. 1. 1.]\n [0. 0. 1.]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#zeros","title":"zeros\u51fd\u6570","text":"<p>\u521b\u5efa\u6307\u5b9a\u5f62\u72b6\uff0c\u4ee50\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>zeros(shape, dtype=numpy.float64, order=\"C\", like=None)</code></p> <ol> <li> <p>shape: \u540c\u4e0a</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>n12 = np.zeros(5)\n\"\"\"\n[0. 0. 0. 0. 0.]\n\"\"\"\n\nn13 = np.zeros([4, 3])\n\"\"\"\n[[0. 0. 0.]\n [0. 0. 0.]\n [0. 0. 0.]\n [0. 0. 0.]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#ones","title":"ones\u51fd\u6570","text":"<p>\u521b\u5efa\u6307\u5b9a\u5f62\u72b6\uff0c\u4ee51\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>ones(shape, dtype=numpy.float64, order=\"C\", like=None)</code></p> <ol> <li> <p>shape: \u540c\u4e0a</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>n14 = np.ones(5)\n\"\"\"\n[1. 1. 1. 1. 1.]\n\"\"\"\n\nn15 = np.ones([4, 3])\n\"\"\"\n[[1. 1. 1.]\n [1. 1. 1.]\n [1. 1. 1.]\n [1. 1. 1.]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#full","title":"full\u51fd\u6570","text":"<p>\u521b\u5efa\u6307\u5b9a\u5f62\u72b6\uff0c\u4ee5fill_value\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>full(shape, fill_value, dtype=None, order=\"C\", like=None)</code></p> <ol> <li> <p>shape: \u540c\u4e0a</p> </li> <li> <p>fill_value: \u6307\u5b9a\u586b\u5145\u503c\u3002\u53ef\u4ee5\u662f\u5355\u4e00\u6570\u503c\u6216\u6570\u7ec4\u7b49</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3aNone\uff0c\u5373\u4e0e\u586b\u5145\u503c\u7c7b\u578b\u4e00\u81f4</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>n16 = np.full(5, fill_value=8)\n\"\"\"\n[8 8 8 8 8]\n\"\"\"\n\nn17 = np.full([4, 3], fill_value=8)\n\"\"\"\n[[8 8 8]\n [8 8 8]\n [8 8 8]\n [8 8 8]]\n\"\"\"\n\nn18 = np.full([6, 4], fill_value=[1, 2, 3, 4])\n\"\"\"\n[[1 2 3 4]\n [1 2 3 4]\n [1 2 3 4]\n [1 2 3 4]\n [1 2 3 4]\n [1 2 3 4]]\n\"\"\"\n\nn18 = np.full([6, 4], fill_value=[[1], [2], [3], [4], [5], [6]])\n\"\"\"\n[[1 1 1 1]\n [2 2 2 2]\n [3 3 3 3]\n [4 4 4 4]\n [5 5 5 5]\n [6 6 6 6]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#_5","title":"\u8303\u56f4\u521b\u5efa","text":""},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#arange","title":"arange\u51fd\u6570","text":"<p>\u7c7b\u4f3c\u4e8erange\u51fd\u6570\uff0c\u8303\u56f4\u4e3a[start\uff0cstop)\uff0c\u533a\u522b\u662f\u8be5\u51fd\u6570\u8fd4\u56de\u6570\u7ec4\u4ee5\u53ca\u8be5\u51fd\u6570\u53c2\u6570\u53ef\u4ee5\u4e3a\u4efb\u610f\u5b9e\u6570\u3002\u5efa\u8bae\u8be5\u51fd\u6570\u53c2\u6570\u4ec5\u4f7f\u7528\u6574\u6570\u7c7b\u578b</p> <p><code>arange(start=0, stop, step=1, dtype=None, like=None)</code></p> <ol> <li> <p>start: \u8d77\u59cb\u503c\u3002\u53ef\u4ee5\u662f\u6574\u6570\u6216\u5b9e\u6570\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>stop: \u7ec8\u6b62\u503c\u3002\u53ef\u4ee5\u662f\u6574\u6570\u6216\u5b9e\u6570</p> </li> <li> <p>step: \u6b65\u957f\u6216\u95f4\u9694\u3002\u53ef\u4ee5\u662f\u6574\u6570\u6216\u5b9e\u6570\u3002\u9ed8\u8ba4\u4e3a1</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3aNone\uff0c\u81ea\u52a8\u5224\u65ad\u6570\u636e\u7c7b\u578b</p> </li> <li> <p>like: \u9ed8\u8ba4\u4e3aNone</p> </li> </ol> <pre><code>n19 = np.arange(10)\n\"\"\"\n[0 1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn20 = np.arange(1, 10)\n\"\"\"\n[1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn21 = np.arange(1, 10, 2)\n\"\"\"\n[1 3 5 7 9]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#linspace","title":"linspace\u51fd\u6570","text":"<p>\u7528\u4e8e\u521b\u5efa\u7b49\u5dee\u6570\u5217\u6570\u7ec4\uff08\u5728start\u548cstop\u4e4b\u95f4\u4ea7\u751fnum\u4e2a\u5747\u5300\u7b49\u5dee\u6570\uff09</p> <p>\u5f53\u5305\u542bstop\uff08\u9ed8\u8ba4\uff09\u65f6\uff0c\u6b65\u957f\u4e3a\uff08stop-start\uff09/\uff08num-1\uff09\uff1b\u5f53\u4e0d\u5305\u542bstop\u65f6\uff0c\u6b65\u957f\u4e3a\uff08stop-start\uff09/num</p> <p><code>linspace(start, stop, num=50, endpoint=True, retstep=False, dtype=None, axis=0)</code></p> <ol> <li> <p>start: \u8d77\u59cb\u503c\u3002\u53ef\u4ee5\u662f\u4efb\u4e00\u5b9e\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49</p> </li> <li> <p>stop: \u7ec8\u6b62\u503c\u3002\u53ef\u4ee5\u662f\u4efb\u4e00\u5b9e\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49</p> </li> <li> <p>num: \u4ea7\u751f\u6837\u672c\u7684\u6570\u91cf\u3002\u9ed8\u8ba4\u4e3a50</p> </li> <li> <p>endpoint: \u662f\u5426\u5305\u542bstop\u53c2\u6570\u503c\u3002\u9ed8\u8ba4\u4e3aTrue</p> </li> <li> <p>retstep: \u662f\u5426\u4ee5\u5143\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de\u663e\u793a\u6b65\u957f\uff08\u7b49\u5dee\uff09\u3002\u9ed8\u8ba4\u4e3aFalse</p> </li> <li> <p>axis: \u4ec5\u5f53start\u6216stop\u4e3a\u5217\u8868\u6216\u6570\u7ec4\u7b49\u7c7b\u578b\u65f6\u6709\u6548\u3002\u8868\u793a\u6cbf\u7740\u8be5\u8f74\u4e3a\u7b49\u5dee\u6570\u5217\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> </ol> <pre><code># \u7b80\u5355\u521b\u5efa\nn22 = np.linspace(1, 10, 5)\n\"\"\"\n[ 1.    3.25  5.5   7.75 10.  ]\n\"\"\"\n\nn23 = np.linspace(1, [11, 12, 13, 14], 5)\n\"\"\"\n[[ 1.    1.    1.    1.  ]\n [ 3.5   3.75  4.    4.25]\n [ 6.    6.5   7.    7.5 ]\n [ 8.5   9.25 10.   10.75]\n [11.   12.   13.   14.  ]]\n\"\"\"\n\nn24 = np.linspace([1, 2, 3, 4], 11, 5)\n\"\"\"\n[[ 1.    2.    3.    4.  ]\n [ 3.5   4.25  5.    5.75]\n [ 6.    6.5   7.    7.5 ]\n [ 8.5   8.75  9.    9.25]\n [11.   11.   11.   11.  ]]\n\"\"\"\n\nn25 = np.linspace([1, 2, 3, 4], [11, 12, 13, 14], 5)\n\"\"\"\n[[ 1.   2.   3.   4. ]\n [ 3.5  4.5  5.5  6.5]\n [ 6.   7.   8.   9. ]\n [ 8.5  9.5 10.5 11.5]\n [11.  12.  13.  14. ]]\n\"\"\"\n\n\n\n# \u8bbe\u7f6eendpoint\nn26 = np.linspace(1, 10, 5, endpoint=False)\n\"\"\"\n[1.  2.8 4.6 6.4 8.2]\n\"\"\"\n\n\n\n# \u8bbe\u7f6eretstep\nn27 = np.linspace(1, 10, 5, retstep=True)\n\"\"\"\n(array([ 1.  ,  3.25,  5.5 ,  7.75, 10.  ]), 2.25)\n\"\"\"\n\n\n\n# \u8bbe\u7f6eaxis\nn28 = np.linspace([1, 2, 3, 4], [11, 12, 13, 14], 6, axis=0)\n\"\"\"\n[[ 1.  2.  3.  4.]\n [ 3.  4.  5.  6.]\n [ 5.  6.  7.  8.]\n [ 7.  8.  9. 10.]\n [ 9. 10. 11. 12.]\n [11. 12. 13. 14.]]\n\"\"\"\n\nn29 = np.linspace([1, 2, 3, 4], [11, 12, 13, 14], 6, axis=1)\n\"\"\"\n[[ 1.  3.  5.  7.  9. 11.]\n [ 2.  4.  6.  8. 10. 12.]\n [ 3.  5.  7.  9. 11. 13.]\n [ 4.  6.  8. 10. 12. 14.]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#logspace","title":"logspace\u51fd\u6570","text":"<p>\u7528\u4e8e\u521b\u5efa\u7b49\u6bd4\u6570\u5217\uff08\u5728basestart\u548cbasestop\u4e4b\u95f4\u4ea7\u751fnum\u4e2a\u5747\u5300\u7b49\u6bd4\u6570\uff09</p> <p>\u7b49\u6bd4\u6570\u5217\u5728\u5bf9\u6570\u4e0a\u4e3a\u7b49\u5dee\u6570\u5217\uff0c\u6240\u4ee5\u6362\u79cd\u601d\u8def\u53ef\u7406\u89e3\u4e3a\uff1a\u5728start\u548cstop\u4e4b\u95f4\u751f\u6210num\u4e2a\u5747\u5300\u7b49\u5dee\u6570\u5217\uff08\u540clinspace\u51fd\u6570\uff09\uff0c\u518d\u5c06\u6bcf\u4e2a\u6570\u4ee5base\u4e3a\u5e95\u4f5c\u6307\u6570\u8fd0\u7b97</p> <p><code>logspace(start, stop, num=50, endpoint=True, base=10.0, dtype=None, axis=0)</code></p> <ol> <li> <p>start: \u540c\u4e0a\u3002\u4f46\u521d\u59cb\u503c\u4e3abase**start</p> </li> <li> <p>stop: \u540c\u4e0a\u3002\u4f46\u7ec8\u6b62\u503c\u4e3abase**stop</p> </li> <li> <p>num: \u540c\u4e0a</p> </li> <li> <p>endpoint: \u540c\u4e0a</p> </li> <li> <p>base: \u5e95\u6570\uff0c\u53ef\u4ee5\u4e3a\u4efb\u4e00\u5b9e\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49\u3002\u9ed8\u8ba4\u4e3a10.0</p> </li> <li> <p>axis: \u4ec5\u5f53start\u3001stop\u6216base\u4e3a\u5217\u8868\u6216\u6570\u7ec4\u7b49\u7c7b\u578b\u65f6\u6709\u6548\u3002\u8868\u793a\u6cbf\u7740\u8be5\u8f74\u4e3a\u7b49\u6bd4\u6570\u5217\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> </ol> <pre><code>n30 = np.logspace(1, 10, 10, base=2)\n\"\"\"\n[   2.    4.    8.   16.   32.   64.  128.  256.  512. 1024.]\n\"\"\"\n\nn31 = np.logspace(1, 4, 5, base=[2, 3, 4, 5])\n\"\"\"\n[[  2.           3.           4.           5.        ]\n [  3.36358566   6.83852117  11.3137085   16.71850762]\n [  5.65685425  15.58845727  32.          55.90169944]\n [  9.51365692  35.53399835  90.50966799 186.91859765]\n [ 16.          81.         256.         625.        ]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#_6","title":"\u968f\u673a\u521b\u5efa","text":""},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#randomrand","title":"random.rand\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u7ed9\u5b9a\u5f62\u72b6\u7684\u6570\u7ec4\uff0c\u5e76\u7528[0\uff0c1)\u4e0a\u5747\u5300\u5206\u5e03\u7684\u968f\u673a\u6837\u672c\u586b\u5145\u3002\u82e5\u672a\u7ed9\u5b9a\u53c2\u6570\uff0c\u5c06\u4ec5\u8fd4\u56de\u4e00\u4e2a\u968f\u673a\u6570</p> <p><code>rand(d0, d1, ..., dn)</code></p> <pre><code>n32 = np.random.rand()\n\"\"\"\n0.9470660042118693\n\"\"\"\n\nn33 = np.random.rand(3)\n\"\"\"\n[0.88734261 0.88303211 0.76045189]\n\"\"\"\n\nn34 = np.random.rand(3, 4)\n\"\"\"\n[[0.38775125 0.56929663 0.82186919 0.3899654 ]\n [0.31936881 0.02693    0.75568994 0.286433  ]\n [0.42836783 0.36534623 0.93650673 0.69723928]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#randomrandn","title":"random.randn\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u7ed9\u5b9a\u5f62\u72b6\u7684\u6570\u7ec4\uff0c\u4ece\u201c\u6807\u51c6\u6b63\u6001\u201d\u5206\u5e03\uff08\u5747\u503c\u4e3a0\uff0c\u6807\u51c6\u5dee\u4e3a1\uff09\u968f\u673a\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u6837\u672c \u670d\u4ece\u5747\u503c\u4e3a\u03bc\uff0c\u6807\u51c6\u5dee\u4e3a\u03c3\u7684\u6b63\u6001\u5206\u5e03\uff0c\u53ef\u7528\uff1a\u03bc + \u03c3 * np.random.randn(...)    \u6765\u751f\u6210\u6570\u7ec4</p> <p><code>randn(d0, d1, ..., dn)</code></p> <pre><code>n35 = np.random.randn()\n\"\"\"\n-0.9634996081712404\n\"\"\"\n\nn36 = np.random.randn(3)\n\"\"\"\n[0.5043878  0.86713589 0.27525007]\n\"\"\"\n\nn37 = np.random.randn(3, 4)\n\"\"\"\n[[-0.1079871  -0.42197777  0.52599791  0.17754496]\n [ 0.47036527 -0.90796359 -0.22122957 -0.50120022]\n [-0.47200183  0.59749017  1.08836655  0.67734795]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#randomrandint","title":"random.randint\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u7ed9\u5b9a\u5f62\u72b6\u7684\u6570\u7ec4\uff0c\u7528[low, high\uff09\u7684\u968f\u673a\u6574\u6570\u6837\u672c\u586b\u5145\uff1b\u82e5high\u672a\u6307\u5b9a\uff0c\u8303\u56f4\u4e3a[0, low)\u7684\u968f\u673a\u6574\u6570</p> <p><code>randint(low, high=None, size=None, dtype=int)</code></p> <ol> <li> <p>low: \u8d77\u59cb\u503c\u3002\u53ef\u4e3a\u6574\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49</p> </li> <li> <p>high: \u7ec8\u6b62\u503c\u3002\u53ef\u4e3a\u6574\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49</p> </li> <li> <p>size: \u6307\u5b9a\u6570\u7ec4\u5f62\u72b6\u5927\u5c0f\u3002\u82e5\u4e0d\u6307\u5b9a\uff0c\u5219\u6839\u636e\u53c2\u6570\u7c7b\u578b\u51b3\u5b9a\u8fd4\u56de\u7c7b\u578b</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3aint</p> </li> </ol> <pre><code># high\u672a\u6307\u5b9a\uff0c\u8303\u56f4\u4e3a[0, low)\nn38 = np.random.randint(2, size=10)\n\"\"\"\n[1 0 1 0 0 0 1 1 1 0]\n\"\"\"\n\n\n\n# \u6307\u5b9ahigh\uff0c\u8303\u56f4\u4e3a[low, high)\nn39 = np.random.randint(1, 10, size=10)\n\"\"\"\n[7 1 6 7 6 7 5 9 1 6]\n\"\"\"\n\n\n\n# \u672a\u6307\u5b9asize\uff0c\u6839\u636e\u53c2\u6570\u7c7b\u578b\u51b3\u5b9asize\nn40 = np.random.randint(1, 10)\n\"\"\"\n8\n\"\"\"\n\nn41 = np.random.randint(1, [10, 11, 12, 13])         # \u8303\u56f4\u5206\u522b\u4e3a[1, 10)\u3001[1, 11)\u3001[1, 12)\u3001[1, 13)\n\"\"\"\n[ 8 10 11  4]\n\"\"\"\n\nn42 = np.random.randint([1, 3, 5, 7], [[10], [20]])\n\"\"\"\n[[1 5 9 8]\n [2 8 8 7]]\n\"\"\"\n\n\n\n# \u6307\u5b9asize\nn43 = np.random.randint(1, 10, size=[3, 4])\n\"\"\"\n[[4 1 7 9]\n [8 2 1 4]\n [4 2 4 7]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#randomnormal","title":"random.normal\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u7ed9\u5b9a\u5f62\u72b6\u7684\u6570\u7ec4\uff0c\u4ece\u6b63\u6001\u5206\u5e03\uff08\u5747\u503c\u4e3aloc\uff0c\u6807\u51c6\u5dee\u4e3ascale\uff09\u968f\u673a\u8fd4\u56de\u4e00\u4e2a\u6216\u591a\u4e2a\u6837\u672c</p> <p><code>normal(loc=0.0, scale=1.0, size=None)</code></p> <ol> <li> <p>loc: \u5747\u503c\u3002\u53ef\u4e3a\u6d6e\u70b9\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49\u3002\u9ed8\u8ba4\u4e3a0.0</p> </li> <li> <p>scale: \u6807\u51c6\u5dee\u3002\u53ef\u4e3a\u6d6e\u70b9\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49,\u3002\u9ed8\u8ba4\u4e3a1.0</p> </li> <li> <p>size: \u540c\u4e0a</p> </li> </ol> <pre><code>n44 = np.random.normal(loc=2, scale=2)\n\"\"\"\n1.8403874883934772\n\"\"\"\n\nn45 = np.random.normal(loc=2, scale=2, size=[3, 4])\n\"\"\"\n[[ 1.89492021  1.82202719  2.46348908 -1.21728651]\n [-3.10725159  3.67963494  8.82440607 -1.18438998]\n [ 4.22737934  1.88183014  1.90411906  0.04398211]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#_7","title":"\u5176\u5b83\u521b\u5efa","text":""},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#asarray","title":"asarray\u51fd\u6570","text":"<p>\u7c7b\u4f3carray\u51fd\u6570\uff0c\u4f46\u9ed8\u8ba4\u4e0d\u590d\u5236\u539f\u6570\u636e\uff1b\u82e5\u8bbe\u7f6e\u4e86dtype\uff0c\u4ec5\u5f53\u6240\u8bbe\u7f6edtype\u4e0e\u539f\u6570\u636e\u4e0d\u5339\u914d\u65f6\u590d\u5236\u539f\u6570\u636e</p> <p><code>asarray(a, dtype=None, order='K', like=None)</code></p> <ol> <li> <p>a: \u4efb\u4f55\u80fd\u8f6c\u6362\u4e3a\u6570\u7ec4\u7684\u5bf9\u8c61</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>like: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.array([1, 2, 3, 4])\nn46 = np.asarray(n0)\nn0[0] = 10\nn46[1] = 20\nprint(n46, n0)\n\"\"\"\n[10 20  3  4] [10 20  3  4]\n\"\"\"\n\nn0 = np.array([1, 2, 3, 4])\nn47 = np.asarray(n0, dtype=np.float_)\nn0[0] = 10\nn47[1] = 20\nprint(n47, n0)\n\"\"\"\n[ 1. 20.  3.  4.] [10  2  3  4]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#frombuffer","title":"frombuffer\u51fd\u6570","text":"<p><code>frombuffer(buffer, count=-1, offset=0, dtype=None, like=None)</code></p> <ol> <li> <p>buffer: \u5177\u6709buffer\u63a5\u53e3\u7684\u5bf9\u8c61</p> </li> <li> <p>count: \u8bfb\u53d6\u7684\u6570\u91cf\u3002\u9ed8\u8ba4\u4e3a-1\uff0c\u8868\u793a\u8bfb\u53d6\u5168\u90e8\u6570\u636e</p> </li> <li> <p>offset: \u504f\u79fb\u91cf\u3002\u4ece\u6b64\u5f00\u59cb\u8bfb\u53d6\u7f13\u51b2\u533a(\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d)\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3afloat</p> </li> <li> <p>like: \u540c\u4e0a</p> </li> </ol> <pre><code>s = b'hello world'\nn48 = np.frombuffer(s, count=3, offset=2, dtype=\"S1\")\n\"\"\"\n[b'l' b'l' b'o']\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#fromiter","title":"fromiter\u51fd\u6570","text":"<p>\u4ece\u53ef\u8fed\u4ee3\u5bf9\u8c61\u521b\u5efa\u6570\u7ec4</p> <p><code>fromiter(iter, dtype, count=-1, like=None)</code></p> <ol> <li> <p>iter: \u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u5982\u5217\u8868\u3001\u5143\u7ec4\u7b49</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>count: \u540c\u4e0a</p> </li> <li> <p>like: \u540c\u4e0a</p> </li> </ol> <pre><code>n49 = np.fromiter([i for i in range(0, 10)], dtype=np.float_, count=6)\n\"\"\"\n[0. 1. 2. 3. 4. 5.]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#like","title":"like\u521b\u5efa","text":"<p>\u8be5\u7c7b\u521b\u5efa\u51fd\u6570\u7c7b\u4f3c\u4e8e\u524d\u8ff0\u586b\u5145\u521b\u5efa\u7684\u51fd\u6570\uff0c\u533a\u522b\u5728\u4e8e\u8be5\u7c7b\u51fd\u6570\u7684\u5f62\u72b6\u7531\u7ed9\u5b9a\u6570\u7ec4\u51b3\u5b9a</p>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#empty_like","title":"empty_like\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e0e\u7ed9\u5b9a\u6570\u7ec4\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b\u76f8\u540c\u7684\u672a\u521d\u59cb\u5316\u7684\u6570\u7ec4</p> <p><code>empty_like(prototype, dtype=None, order='K', subok=True, shape=None)</code></p> <ol> <li> <p>prototype: \u7ed9\u5b9a\u7684\u6570\u7ec4</p> </li> <li> <p>dtype: \u8986\u76d6\u7ed3\u679c\u7684\u6570\u636e\u7c7b\u578b\u3002\u540c\u4e0a</p> </li> <li> <p>order: \u8986\u76d6\u7ed3\u679c\u7684\u5185\u5b58\u6392\u5217\uff0c\u9ed8\u8ba4\u4e3a\"K\"\u3002\u540c\u4e0a</p> </li> <li> <p>subok: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3aTrue</p> </li> <li> <p>shape: \u8986\u76d6\u7ed3\u679c\u7684\u5f62\u72b6\u3002\u540c\u4e0a</p> </li> </ol> <pre><code>n50 = np.empty_like([[1, 2, 3, 4], [5, 6, 7, 8]])\n\"\"\"\n[[         0 1072693248          0 1077149696]\n [         0 1074266112          0 1074790400]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#zeros_like","title":"zeros_like\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e0e\u7ed9\u5b9a\u6570\u7ec4\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b\u76f8\u540c\u7684\u4ee50\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>zeros_like(a, dtype=None, order='K', subok=True, shape=None)</code></p> <ol> <li> <p>a: \u7ed9\u5b9a\u7684\u6570\u7ec4</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>subok: \u540c\u4e0a</p> </li> <li> <p>shape: \u540c\u4e0a</p> </li> </ol> <pre><code>n51 = np.zeros_like([[1, 2, 3, 4], [5, 6, 7, 8]])\n\"\"\"\n[[0 0 0 0]\n [0 0 0 0]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#ones_like","title":"ones_like\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e0e\u7ed9\u5b9a\u6570\u7ec4\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b\u76f8\u540c\u7684\u4ee51\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>ones_like(a, dtype=None, order='K', subok=True, shape=None)</code></p> <ol> <li> <p>a: \u7ed9\u5b9a\u7684\u6570\u7ec4</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>subok: \u540c\u4e0a</p> </li> <li> <p>shape: \u540c\u4e0a</p> </li> </ol> <pre><code>n52 = np.ones_like([[1, 2, 3, 4], [5, 6, 7, 8]])\n\"\"\"\n[[1 1 1 1]\n [1 1 1 1]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#full_like","title":"full_like\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u4e0e\u7ed9\u5b9a\u6570\u7ec4\u7684\u7ef4\u5ea6\u548c\u6570\u636e\u7c7b\u578b\u76f8\u540c\u7684\u4ee5fill_value\u586b\u5145\u7684\u6570\u7ec4</p> <p><code>full_like(a, fill_value, dtype=None, order='K', subok=True, shape=None)</code></p> <ol> <li> <p>a: \u7ed9\u5b9a\u7684\u6570\u7ec4</p> </li> <li> <p>fill_value: \u6307\u5b9a\u586b\u5145\u503c\u3002\u540c\u4e0a</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> <li> <p>subok: \u540c\u4e0a</p> </li> <li> <p>shape: \u540c\u4e0a</p> </li> </ol> <pre><code>n53 = np.full_like([[1, 2, 3, 4], [5, 6, 7, 8]], fill_value=10)\n\"\"\"\n[[10 10 10 10]\n [10 10 10 10]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#_8","title":"\u5bf9\u89d2\u521b\u5efa","text":"<p>\u5bf9\u4e8e\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4\u624d\u6709\u5bf9\u89d2\u7ebf\uff0c\u4e00\u822c\u53ea\u63d0\u4e8c\u7ef4\u6570\u7ec4</p> <p>\u5bf9\u4e8e\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5176\u5bf9\u89d2\u7ebf\u662f\u6307a[i, i+offset\u6216k]\uff0coffset\u6216k\u662f\u504f\u79fb\u91cf\uff0c\u5f53offset\u6216k=0\u65f6\uff0c\u8be5\u5bf9\u89d2\u7ebf\u4e3a\u4e3b\u5bf9\u89d2\u7ebf\uff0c\u5373a[i, i]\uff0c\u8be5\u5bf9\u89d2\u7ebf\u5305\u542b\u7684\u5143\u7d20\u5305\u62eca[0, 0], a[1, 1], ..., a[i, i]\u3002</p> <p>\u5bf9\u4e8e\u591a\u7ef4\u6570\u7ec4\uff0c\u5176\u4e3b\u5bf9\u89d2\u7ebf\u4e3aa[i, i, ..., i]</p>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#eye","title":"eye\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u5bf9\u89d2\u7ebf(i, i+k)\u4e3a1\uff0c\u5176\u5b83\u4f4d\u7f6e\u4e3a0\u7684\u4e8c\u7ef4\u6570\u7ec4</p> <p><code>eye(N, M=N, k=0, dtype=float, order='C', like=None)</code></p> <ol> <li> <p>N: \u884c\u6570</p> </li> <li> <p>M: \u5217\u6570\u3002\u9ed8\u8ba4\u4e0eN\u76f8\u7b49</p> </li> <li> <p>k: \u76f8\u5bf9\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u7684\u504f\u79fb\u91cf\u6216\u8005\u5bf9\u89d2\u7ebf\u7d22\u5f15\u3002\u9ed8\u8ba4\u4e3a0\uff0c\u5373\u4e3b\u5bf9\u89d2\u7ebf\uff1b+\u8868\u793a\u4e0a\u65b9\u5bf9\u89d2\u7ebf\uff0c-\u8868\u793a\u4e0b\u65b9\u5bf9\u89d2\u7ebf</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3afloat</p> </li> <li> <p>order: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3a\"C\"</p> </li> <li> <p>like: \u540c\u4e0a</p> </li> </ol> <pre><code>n54 = np.eye(5)\n\"\"\"\n[[1. 0. 0. 0. 0.]\n [0. 1. 0. 0. 0.]\n [0. 0. 1. 0. 0.]\n [0. 0. 0. 1. 0.]\n [0. 0. 0. 0. 1.]]\n\"\"\"\n\nn55 = np.eye(5, 7)\n\"\"\"\n[[1. 0. 0. 0. 0. 0. 0.]\n [0. 1. 0. 0. 0. 0. 0.]\n [0. 0. 1. 0. 0. 0. 0.]\n [0. 0. 0. 1. 0. 0. 0.]\n [0. 0. 0. 0. 1. 0. 0.]]\n\"\"\"\n\nn56 = np.eye(5, 7, k=1)\n\"\"\"\n[[0. 1. 0. 0. 0. 0. 0.]\n [0. 0. 1. 0. 0. 0. 0.]\n [0. 0. 0. 1. 0. 0. 0.]\n [0. 0. 0. 0. 1. 0. 0.]\n [0. 0. 0. 0. 0. 1. 0.]]\n\"\"\"\n\nn57 = np.eye(5, 7, k=-1)\n\"\"\"\n[[0. 0. 0. 0. 0. 0. 0.]\n [1. 0. 0. 0. 0. 0. 0.]\n [0. 1. 0. 0. 0. 0. 0.]\n [0. 0. 1. 0. 0. 0. 0.]\n [0. 0. 0. 1. 0. 0. 0.]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#diag","title":"diag\u51fd\u6570","text":"<p>\u63d0\u53d6\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u5bf9\u89d2\u6216\u8005\u521b\u5efa\u4e00\u4e2a\u5bf9\u89d2\u4e8c\u7ef4\u6570\u7ec4(\u5bf9\u89d2\u4e3a\u8be5\u4e00\u7ef4\u6570\u7ec4)</p> <p><code>diag(v, k=0)</code></p> <ol> <li> <p>v: \u6307\u5b9a\u6570\u7ec4\uff0c\u53ea\u80fd\u662f\u4e00\u7ef4\u6570\u7ec4\u6216\u4e8c\u7ef4\u6570\u7ec4</p> </li> <li> <p>k: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.random.randint(1, 10, size=(5, 7))\n\"\"\"\n[[3 2 6 9 2 4 8]\n [7 4 1 4 7 4 2]\n [4 3 5 1 6 8 9]\n [2 6 9 2 2 3 7]\n [1 5 7 4 3 5 6]]\n\"\"\"\n\nn58 = np.diag(n0)\n\"\"\"\n[3 4 5 2 3]\n\"\"\"\n\nn1 = np.array([1, 2, 3, 4])\nn59 = np.diag(n1)\n\"\"\"\n[[1 0 0 0]\n [0 2 0 0]\n [0 0 3 0]\n [0 0 0 4]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#diagflat","title":"diagflat\u51fd\u6570","text":"<p>\u5c06\u6570\u7ec4\u8f6c\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4\u540e\uff0c\u521b\u5efa\u4e00\u4e2a\u5bf9\u89d2\u4e8c\u7ef4\u6570\u7ec4\uff08\u5bf9\u89d2\u4e3a\u8be5\u8f6c\u5316\u540e\u7684\u4e00\u7ef4\u6570\u7ec4\uff09</p> <p><code>diagflat(v, k=0)</code></p> <ol> <li> <p>v: \u6307\u5b9a\u6570\u7ec4</p> </li> <li> <p>k: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.array([1, 2, 3, 4])\nn60 = np.diagflat(n0)\n\"\"\"\n[[1 0 0 0]\n [0 2 0 0]\n [0 0 3 0]\n [0 0 0 4]]\n\"\"\"\n\nn1 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nn61 = np.diagflat(n1)\n\"\"\"\n[[1 0 0 0 0 0 0 0]\n [0 2 0 0 0 0 0 0]\n [0 0 3 0 0 0 0 0]\n [0 0 0 4 0 0 0 0]\n [0 0 0 0 5 0 0 0]\n [0 0 0 0 0 6 0 0]\n [0 0 0 0 0 0 7 0]\n [0 0 0 0 0 0 0 8]]\n\"\"\"\n</code></pre>"},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#_9","title":"\u5bf9\u89d2\u4e09\u89d2\u521b\u5efa","text":""},{"location":"numpy/1.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%A6%82%E5%BF%B5%E5%8F%8A%E5%88%9B%E5%BB%BA%2B101c0975-b67c-4216-8719-591a35b324bb/#tri","title":"tri\u51fd\u6570","text":"<p>\u521b\u5efa\u4e00\u4e2a\u5bf9\u89d2\u7ebf(i, i+k)\u53ca\u4ee5\u4e0b\u90e8\u5206\u4e3a1\uff0c\u5176\u5b83\u4f4d\u7f6e\u4e3a0\u7684\u4e8c\u7ef4\u6570\u7ec4</p> <p><code>tri(N, M=N, k=0, dtype=float, like=None)</code></p> <ol> <li> <p>N: \u884c\u6570</p> </li> <li> <p>M: \u5217\u6570\u3002\u9ed8\u8ba4\u4e0eN\u76f8\u7b49</p> </li> <li> <p>k: \u540c\u4e0a</p> </li> <li> <p>dtype: \u540c\u4e0a\u3002\u9ed8\u8ba4\u4e3afloat</p> </li> <li> <p>like: \u540c\u4e0a</p> </li> </ol> <pre><code>n62 = np.tri(5)\n\"\"\"\n[[1. 0. 0. 0. 0.]\n [1. 1. 0. 0. 0.]\n [1. 1. 1. 0. 0.]\n [1. 1. 1. 1. 0.]\n [1. 1. 1. 1. 1.]]\n\"\"\"\n\nn63 = np.tri(5, 7)\n\"\"\"\n[[1. 0. 0. 0. 0. 0. 0.]\n [1. 1. 0. 0. 0. 0. 0.]\n [1. 1. 1. 0. 0. 0. 0.]\n [1. 1. 1. 1. 0. 0. 0.]\n [1. 1. 1. 1. 1. 0. 0.]]\n\"\"\"\n\nn64 = np.tri(5, 7, k=1)\n\"\"\"\n[[1. 1. 0. 0. 0. 0. 0.]\n [1. 1. 1. 0. 0. 0. 0.]\n [1. 1. 1. 1. 0. 0. 0.]\n [1. 1. 1. 1. 1. 0. 0.]\n [1. 1. 1. 1. 1. 1. 0.]]\n\"\"\"\n\nn65 = np.tri(5, 7, k=-1)\n\"\"\"\n[[0. 0. 0. 0. 0. 0. 0.]\n [1. 0. 0. 0. 0. 0. 0.]\n [1. 1. 0. 0. 0. 0. 0.]\n [1. 1. 1. 0. 0. 0. 0.]\n [1. 1. 1. 1. 0. 0. 0.]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/","title":"\u5e38\u6570","text":"<ol> <li> <p>\u6b63\u65e0\u7a77\u5927: Inf\u3001Infinity\u3001PINF\u3001infty\u3001inf</p> </li> <li> <p>\u8d1f\u65e0\u7a77\u5927: NINF</p> </li> <li> <p>\u975e\u6570\u5b57: NAN\u3001NaN\u3001nan</p> </li> <li> <p>\u6b63\u96f6: PZERO</p> </li> <li> <p>\u8d1f\u96f6: NZERO</p> </li> <li> <p>\u81ea\u7136\u5e38\u6570e: e</p> </li> <li> <p>\u6b27\u62c9\u5e38\u6570\u03b3: euler_gamma</p> </li> <li> <p>\u03c0: pi</p> </li> <li> <p>None: newaxis\uff0c\u4e3b\u8981\u7528\u4e8e\u7d22\u5f15\u6570\u7ec4</p> </li> </ol> <pre><code>print(np.Inf, np.Infinity, np.PINF, np.infty, np.inf)\n\"\"\"\ninf inf inf inf inf\n\"\"\"\n\nprint(np.NINF)\n\"\"\"\n-inf\n\"\"\"\n\nprint(np.NAN, np.NaN, np.nan)\n\"\"\"\nnan nan nan\n\"\"\"\n\nprint(np.PZERO)\n\"\"\"\n0.0\n\"\"\"\n\nprint(np.NZERO)\n\"\"\"\n-0.0\n\"\"\"\n\nprint(np.e)\n\"\"\"\n2.718281828459045\n\"\"\"\n\nprint(np.euler_gamma)\n\"\"\"\n0.5772156649015329\n\"\"\"\n\nprint(np.pi)\n\"\"\"\n3.141592653589793\n\"\"\"\n\nprint(np.newaxis)\n\"\"\"\nNone\n\"\"\"\n\nn0 = np.array([1, 2, 3, 4])\nprint(n0[np.newaxis, :])\n\"\"\"\n[[1 2 3 4]]\n\"\"\"\n\nprint(n0[np.newaxis])\n\"\"\"\n[[1 2 3 4]]\n\"\"\"\n\nprint(n0[None])\n\"\"\"\n[[1 2 3 4]]\n\"\"\"\n\nprint(n0[:, np.newaxis])\n\"\"\"\n[[1]\n [2]\n [3]\n [4]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_2","title":"\u7c7b\u578b\u8f6c\u6362","text":"<p>\u5728\u4e0a\u4e00\u8282\u4e2d\u5173\u4e8edtype\u6709\u8be6\u7ec6\u4ecb\u7ecd\u3002\u5176\u4e2d\u7684\u7c7b\u578b\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7528\u4e8e\u6570\u636e\u7c7b\u578b\u8f6c\u6362</p> <pre><code>n = 3.14\nn_int8 = np.int8(n)\nprint(n_int8)\n\"\"\"\n3\n\"\"\"\n\nn_bool = np.bool_(n)\nprint(n_bool)\n\"\"\"\nTrue\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_3","title":"\u6570\u7ec4\u5c5e\u6027","text":"<ol> <li> <p>shape: \u5f62\u72b6</p> </li> <li> <p>dtype: \u6570\u636e\u7c7b\u578b</p> </li> <li> <p>ndim: \u7ef4\u5ea6</p> </li> <li> <p>base: \u57fa\u7c7b\u6570\u7ec4</p> </li> <li> <p>flat: \u4e00\u7ef4\u6570\u7ec4\u8fed\u4ee3\u5668</p> </li> <li> <p>imag:\u865a\u90e8</p> </li> <li> <p>real: \u5b9e\u90e8</p> </li> <li> <p>size: \u603b\u5143\u7d20\u6570=\u7ef4\u6570\u4e58\u79ef</p> </li> <li> <p>itemsize: \u6bcf\u4e2a\u5143\u7d20\u5360\u7684\u5b57\u8282\u6570</p> </li> <li> <p>nbytes: \u603b\u5143\u7d20\u5b57\u8282\u6570=size * itemsize</p> </li> <li> <p>strides:\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u8fdb\u5165\u5230\u4e0b\u4e00\u4e2a\u6570\u9700\u8981\u8de8\u8d8a\u7684\u5b57\u8282\u6570</p> </li> <li> <p>flags: \u5185\u5b58\u5e03\u5c40\u4fe1\u606f</p> </li> <li> <p>ctypes</p> </li> <li> <p>data</p> </li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\nn1 = n0.reshape(3, 4)\nprint(n1)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\n# shape\u5c5e\u6027: \u5f62\u72b6\nprint(n1.shape)\n\"\"\"\n(3, 4)\n\"\"\"\n\n# dtype\u5c5e\u6027: \u6570\u636e\u7c7b\u578b\nprint(n1.dtype)\n\"\"\"\nint32\n\"\"\"\n\n# ndim\u5c5e\u6027: \u7ef4\u5ea6\nprint(n1.ndim)\n\"\"\"\n2\n\"\"\"\n\n# base\u5c5e\u6027: \u57fa\u7c7b\u6570\u7ec4\nprint(n1.base, n1.base is n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11] True\n\"\"\"\n\n# flat\u5c5e\u6027: \u4e00\u7ef4\u6570\u7ec4\u8fed\u4ee3\u5668\nprint(n1.flat, np.array(n1.flat))\n\"\"\"\n&lt;numpy.flatiter object at 0x000001F088E46760&gt; [ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\n# imag\u5c5e\u6027:\u865a\u90e8\nprint(n1.imag)\n\"\"\"\n[[0 0 0 0]\n [0 0 0 0]\n [0 0 0 0]]\n\"\"\"\n\n# real\u5c5e\u6027: \u5b9e\u90e8\nprint(n1.real)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\n# size\u5c5e\u6027: \u603b\u5143\u7d20\u6570=\u7ef4\u6570\u4e58\u79ef\nprint(n1.size)\n\"\"\"\n12\n\"\"\"\n\n# itemsize\u5c5e\u6027: \u6bcf\u4e2a\u5143\u7d20\u5360\u7684\u5b57\u8282\u6570\nprint(n1.itemsize)\n\"\"\"\n4\n\"\"\"\n\n# nbytes\u5c5e\u6027: \u603b\u5143\u7d20\u5b57\u8282\u6570=size * itemsize\nprint(n1.nbytes)\n\"\"\"\n48\n\"\"\"\n\n# strides\u5c5e\u6027:\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u8fdb\u5165\u5230\u4e0b\u4e00\u4e2a\u6570\u9700\u8981\u8de8\u8d8a\u7684\u5b57\u8282\u6570\nprint(n1.strides)\n\"\"\"\n(16, 4)\n\"\"\"\n\n# flags\u5c5e\u6027: \u5185\u5b58\u5e03\u5c40\u4fe1\u606f\nprint(n1.flags)\n\"\"\"\n  C_CONTIGUOUS : True\n  F_CONTIGUOUS : False\n  OWNDATA : False\n  WRITEABLE : True\n  ALIGNED : True\n  WRITEBACKIFCOPY : False\n\"\"\"\n\n# ctypes\u5c5e\u6027\nprint(n1.ctypes)\n\"\"\"\n&lt;numpy.core._internal._ctypes object at 0x00000203AF48EF00&gt;\n\"\"\"\n\n# data\u5c5e\u6027\nprint(n1.data)\n\"\"\"\n&lt;memory at 0x00000203AF4C0520&gt;\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_4","title":"\u6570\u7ec4\u8fd0\u7b97","text":""},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#add","title":"\u52a0\u6cd5\u8fd0\u7b97\uff08+\u3001add\u51fd\u6570\uff09","text":"<pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 + n2)\n\"\"\"\n[ 6  8 10 12]\n\"\"\"\n\nprint(n1 + n3)\n\"\"\"\n[[2 3 4 5]\n [6 7 8 9]]\n\"\"\"\n\nprint(n1 + n4)\n\"\"\"\n[[ 2  4  6  8]\n [ 6  8 10 12]]\n\"\"\"\n\nprint(n3 + n4)\n\"\"\"\n[[ 2  3  4  5]\n [10 11 12 13]]\n\"\"\"\n\nprint(np.add(n3, n4))\n\"\"\"\n[[ 2  3  4  5]\n [10 11 12 13]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#-subtract","title":"\u51cf\u6cd5\u8fd0\u7b97\uff08-\u3001subtract\u51fd\u6570\uff09","text":"<pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 - n2)\n\"\"\"\n[-4 -4 -4 -4]\n\"\"\"\n\nprint(n1 - n3)\n\"\"\"\n[[ 0  1  2  3]\n [-4 -3 -2 -1]]\n\"\"\"\n\nprint(n1 - n4)\n\"\"\"\n[[ 0  0  0  0]\n [-4 -4 -4 -4]]\n\"\"\"\n\nprint(n3 - n4)\n\"\"\"\n[[ 0 -1 -2 -3]\n [ 0 -1 -2 -3]]\n\"\"\"\n\nprint(np.subtract(n3, n4))\n\"\"\"\n[[ 0 -1 -2 -3]\n [ 0 -1 -2 -3]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#multiply","title":"\u4e58\u6cd5\u8fd0\u7b97\uff08*\u3001multiply\u51fd\u6570\uff09","text":"<pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 * n2)\n\"\"\"\n[ 5 12 21 32]\n\"\"\"\n\nprint(n1 * n3)\n\"\"\"\n[[ 1  2  3  4]\n [ 5 10 15 20]]\n\"\"\"\n\nprint(n1 * n4)\n\"\"\"\n[[ 1  4  9 16]\n [ 5 12 21 32]]\n\"\"\"\n\nprint(n3 * n4)\n\"\"\"\n[[ 1  2  3  4]\n [25 30 35 40]]\n\"\"\"\n\nprint(np.multiply(n3, n4))\n\"\"\"\n[[ 1  2  3  4]\n [25 30 35 40]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#dividetrue_divide","title":"\u9664\u6cd5\u8fd0\u7b97\uff08/\u3001divide\u51fd\u6570\u3001true_divide\u51fd\u6570\uff09","text":"<pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 / n2)\n\"\"\"\n[0.2        0.33333333 0.42857143 0.5       ]\n\"\"\"\n\nprint(n1 / n3)\n\"\"\"\n[[1.  2.  3.  4. ]\n [0.2 0.4 0.6 0.8]]\n\"\"\"\n\nprint(n1 / n4)\n\"\"\"\n[[1.         1.         1.         1.        ]\n [0.2        0.33333333 0.42857143 0.5       ]]\n\"\"\"\n\nprint(n3 / n4)\n\"\"\"\n[[1.         0.5        0.33333333 0.25      ]\n [1.         0.83333333 0.71428571 0.625     ]]\n\"\"\"\n\nprint(np.divide(n3, n4))\n\"\"\"\n[[1.         0.5        0.33333333 0.25      ]\n [1.         0.83333333 0.71428571 0.625     ]]\n\"\"\"\n\nprint(np.true_divide(n3, n4))\n\"\"\"\n[[1.         0.5        0.33333333 0.25      ]\n [1.         0.83333333 0.71428571 0.625     ]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#floor_divide","title":"\u6574\u9664\uff08\u5730\u677f\u9664\uff09\u8fd0\u7b97\uff08//\u3001floor_divide\u51fd\u6570\uff09","text":"<p>\u6ee1\u8db3a = a % b + b * (a // b)</p> <pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 // n2)\n\"\"\"\n[0 0 0 0]\n\"\"\"\n\nprint(n1 // n3)\n\"\"\"\n[[1 2 3 4]\n [0 0 0 0]]\n\"\"\"\n\nprint(n1 // n4)\n\"\"\"\n[[1 1 1 1]\n [0 0 0 0]]\n\"\"\"\n\nprint(n3 // n4)\n\"\"\"\n[[1 0 0 0]\n [1 0 0 0]]\n\"\"\"\n\nprint(np.floor_divide(n3, n4))\n\"\"\"\n[[1 0 0 0]\n [1 0 0 0]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#remaindermodfmoddivmod","title":"\u53d6\u4f59\uff08\u6a21\uff09\u8fd0\u7b97\uff08%\u3001remainder\u51fd\u6570\u3001mod\u51fd\u6570\u3001fmod\u51fd\u6570\u3001divmod\u51fd\u6570\uff09","text":"<ol> <li> <p>%\u3001remainder\u51fd\u6570\u3001mod\u51fd\u6570: \u6ee1\u8db3a = a % b + b * (a // b)</p> </li> <li> <p>fmod\u51fd\u6570\uff1a\u7ed3\u679c\u7b26\u53f7\u4e0e\u88ab\u9664\u6570\u76f8\u540c\u3002|\u7ed3\u679c| = |a| % |b|</p> </li> <li> <p>divmod\u51fd\u6570: \u540c\u65f6\u8fd4\u56de\u5546\u4e0e\u4f59\u6570</p> </li> </ol> <pre><code>n1 = np.array([1, -2, 3, -4])\nn2 = np.array([5, -6, -7, 8])\nn3 = np.array([[-1], [5]])\nn4 = np.array([[1, -2, 3, -4], [-5, -6, -7, 8]])\n\nprint(n1 % n2)\n\"\"\"\n[ 1 -2 -4  4]\n\"\"\"\n\nprint(n1 % n3)\n\"\"\"\n[[0 0 0 0]\n [1 3 3 1]]\n\"\"\"\n\nprint(n1 % n4)\n\"\"\"\n[[ 0  0  0  0]\n [-4 -2 -4  4]]\n\"\"\"\n\nprint(n3 % n4)\n\"\"\"\n[[ 0 -1  2 -1]\n [ 0 -1 -2  5]]\n\"\"\"\n\nprint(np.remainder(n3, n4))\n\"\"\"\n[[ 0 -1  2 -1]\n [ 0 -1 -2  5]]\n\"\"\"\n\nprint(np.mod(n3, n4))\n\"\"\"\n[[ 0 -1  2 -1]\n [ 0 -1 -2  5]]\n\"\"\"\n\nprint(np.fmod(n3, n4))\n\"\"\"\n[[ 0 -1 -1 -1]\n [ 0  5  5  5]]\n\"\"\"\n\nprint(np.divmod(n3, n4))\n\"\"\"\n(array([[-1,  0, -1,  0],\n       [-1, -1, -1,  0]]), \n array([[ 0, -1,  2, -1],\n       [ 0, -1, -2,  5]]))\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#matmuldot","title":"\u70b9\u79ef\u8fd0\u7b97\uff08@\u3001matmul\u51fd\u6570\u3001dot\u51fd\u6570\uff09","text":"<p>\u7b2c\u4e00\u4e2a\u6570\u7ec4\u5217\u6570\u5fc5\u987b\u4e0e\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u7684\u884c\u6570\u76f8\u540c\uff0c\u5bf9\u5e94\u884c\u5217\u4e58\u79ef\u76f8\u52a0\u7684\u7ed3\u679c\u4e3a\u8fd0\u7b97\u7ed3\u679c\u5bf9\u5e94\u884c\u5217\u7684\u5143\u7d20</p> <p>\u5373\u5f62\u72b6\u4e3a(m, k)\u7684\u6570\u7ec4\u4e0e\u5f62\u72b6\u4e3a(k, n)\u7684\u6570\u7ec4\u7684\u70b9\u79ef\u7ed3\u679c\u4e3a\u4e00\u4e2a\u5f62\u72b6\u4e3a(m, n)\u7684\u6570\u7ec4</p> <p>matmul\u51fd\u6570\u652f\u6301\u5e7f\u64ad\u673a\u5236\uff0c\u4e0d\u652f\u6301\u6807\u91cf\u4e58\u6cd5\u8fd0\u7b97</p> <p>dot\u51fd\u6570\u4e0d\u652f\u6301\u5e7f\u64ad\u673a\u5236\uff0c\u652f\u6301\u6807\u91cf\u4e58\u6cd5\u8fd0\u7b97</p> <p></p> <ol> <li> <p>\u7b2c\u4e00\u4e2a\u6570\u7ec4\u82e5\u4e3a\u4e00\u7ef4\uff0c\u5219\u5176\u5c06\u88ab\u63d0\u5347\u4e3a\u4e8c\u7ef4\uff0c\u5e76\u89c6\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u4e00\u884c\uff0c\u7ed3\u679c\u4ecd\u4e3a\u4e00\u7ef4\u6570\u7ec4</p> </li> <li> <p>\u7b2c\u4e8c\u4e2a\u6570\u7ec4\u82e5\u4e3a\u4e00\u7ef4\uff0c\u5219\u5176\u5c06\u88ab\u63d0\u5347\u4e3a\u4e8c\u7ef4\uff0c\u5e76\u89c6\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u4e00\u5217\uff0c\u7ed3\u679c\u4ecd\u4e3a\u4e00\u7ef4\u6570\u7ec4</p> </li> </ol> <pre><code>n0 = np.array([1, 2, 3, 4])\nprint(n0)\n\"\"\"\n[1 2 3 4]\n\"\"\"\n\nn1 = np.array([5, 6, 7, 8])\nprint(n1)\n\"\"\"\n[5 6 7 8]\n\"\"\"\n\nn2 = np.arange(1, 17).reshape(4, 4)\nprint(n2)\n\"\"\"\n[[ 1  2  3  4]\n [ 5  6  7  8]\n [ 9 10 11 12]\n [13 14 15 16]]\n\"\"\"\n\nprint(n0 @ n1)\n\"\"\"\n70\n\"\"\"\n\nprint(n0 @ n2)\n\"\"\"\n[ 90 100 110 120]\n\"\"\"\n\nprint(n2 @ n0)\n\"\"\"\n[ 30  70 110 150]\n\"\"\"\n\nprint(n2 @ n2)\n\"\"\"\n[[ 90 100 110 120]\n [202 228 254 280]\n [314 356 398 440]\n [426 484 542 600]]\n\"\"\"\n\nprint(np.matmul(n2, n2))\n\"\"\"\n[[ 90 100 110 120]\n [202 228 254 280]\n [314 356 398 440]\n [426 484 542 600]]\n\"\"\"\n\nprint(np.dot(n2, n2))\n\"\"\"\n[[ 90 100 110 120]\n [202 228 254 280]\n [314 356 398 440]\n [426 484 542 600]]\n\"\"\"\n\nprint(np.dot(n2, 3))\n\"\"\"\n[[ 3  6  9 12]\n [15 18 21 24]\n [27 30 33 36]\n [39 42 45 48]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#powerfloat_power","title":"\u4e58\u65b9\u8fd0\u7b97\uff08**\u3001power\u51fd\u6570\u3001float_power\u51fd\u6570\uff09","text":"<p>\u8d1f\u6570\u7684\u975e\u6574\u6570\u5e42\u5c06\u8fd4\u56denan</p> <p>float_power\u51fd\u6570\u4e0epower\u51fd\u6570\u7684\u4e0d\u540c\u4e4b\u5904\u5728\u4e8e\uff0c\u6574\u6570\u3001float16 \u548c float32 \u88ab\u63d0\u5347\u4e3a\u6700\u5c0f\u7cbe\u5ea6\u4e3a float64 \u7684\u6d6e\u70b9\u6570\uff0c\u56e0\u6b64\u7ed3\u679c\u603b\u662f\u4e0d\u51c6\u786e\u7684</p> <p>power\u51fd\u6570\u4e0d\u652f\u6301\u6574\u6570\u7684\u8d1f\u6570\u5e42</p> <pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 ** n2)\n\"\"\"\n[    1    64  2187 65536]\n\"\"\"\n\nprint(n1 ** n3)\n\"\"\"\n[[   1    2    3    4]\n [   1   32  243 1024]]\n\"\"\"\n\nprint(n1 ** n4)\n\"\"\"\n[[    1     4    27   256]\n [    1    64  2187 65536]]\n\"\"\"\n\nprint(n3 ** n4)\n\"\"\"\n[[     1      1      1      1]\n [  3125  15625  78125 390625]]\n\"\"\"\n\nprint(np.power(n3, n4))\n\"\"\"\n[[     1      1      1      1]\n [  3125  15625  78125 390625]]\n\"\"\"\n\nprint(np.power(-1, 1.5))\n\"\"\"\nimeWarning: invalid value encountered in power\n  print(np.power(-1, 1.5))\nnan\n\"\"\"\n\nprint(np.float_power(1, -1))\n\"\"\"\n1.0\n\"\"\"\n\nprint(type(np.power(2, 2)), type(np.float_power(2, 2)))\n\"\"\"\n&lt;class 'numpy.int32'&gt; &lt;class 'numpy.float64'&gt;\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_5","title":"\u6bd4\u8f83\u8fd0\u7b97","text":"<ol> <li> <p>: greater\u51fd\u6570</p> </li> <li> <p>=: greater_equal\u51fd\u6570</p> </li> <li> <p>&lt;: less\u51fd\u6570</p> </li> <li> <p>&lt;=: less_equal\u51fd\u6570</p> </li> <li> <p>!=: not_equal\u51fd\u6570</p> </li> <li> <p>==: equal\u51fd\u6570</p> </li> <li> <p>\u6700\u5927\u503c: maximum\u51fd\u6570\uff08\u4e8c\u8005\u4e4b\u4e00\u4e3anan\u5219\u8fd4\u56denan\uff09\u3001fmax\uff08\u4e8c\u8005\u4e4b\u4e00\u4e3anan\u5219\u8fd4\u56de\u975enan\uff09\uff0c\u4e8c\u8005\u5747\u4e3anan\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u9002\u7528\u4e8e\u590d\u6570\uff0c\u590d\u6570\u81f3\u5c11\u5b9e\u90e8\u6216\u865a\u90e8\u4e4b\u4e00\u4e3anan\u5373\u4e3anan\uff09</p> </li> <li> <p>\u6700\u5c0f\u503c: minimum\u51fd\u6570\uff08\u4e8c\u8005\u4e4b\u4e00\u4e3anan\u5219\u8fd4\u56denan\uff09\u3001fmin\uff08\u4e8c\u8005\u4e4b\u4e00\u4e3anan\u5219\u8fd4\u56de\u975enan\uff09\uff0c\u4e8c\u8005\u5747\u4e3anan\u5219\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5143\u7d20\uff08\u9002\u7528\u4e8e\u590d\u6570\uff0c\u590d\u6570\u81f3\u5c11\u5b9e\u90e8\u6216\u865a\u90e8\u4e4b\u4e00\u4e3anan\u5373\u4e3anan\uff09</p> </li> </ol> <pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 &gt;= n2)\n\"\"\"\n[False False False False]\n\"\"\"\n\nprint(n1 &gt;= n3)\n\"\"\"\n[[ True  True  True  True]\n [False False False False]]\n\"\"\"\n\nprint(n1 &gt;= n4)\n\"\"\"\n[[ True  True  True  True]\n [False False False False]]\n\"\"\"\n\nprint(n3 &gt;= n4)\n\"\"\"\n[[ True False False False]\n [ True False False False]]\n\"\"\"\n\nprint(np.greater_equal(n3, n4))\n\"\"\"\n[[ True False False False]\n [ True False False False]]\n\"\"\"\n\nprint(np.maximum(n3, n4))\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]]\n\"\"\"\n\nprint(np.minimum(n3, n4))\n\"\"\"\n[[1 1 1 1]\n [5 5 5 5]]\n\"\"\"\n\nprint(np.fmax(n3, n4))\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]]\n\"\"\"\n\nprint(np.fmin(n3, n4))\n\"\"\"\n[[1 1 1 1]\n [5 5 5 5]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_6","title":"\u903b\u8f91\u8fd0\u7b97","text":"<ol> <li> <p>\u4e0e\u8fd0\u7b97: logical_and\u51fd\u6570</p> </li> <li> <p>\u6216\u8fd0\u7b97: logical_or\u51fd\u6570</p> </li> <li> <p>\u975e\u8fd0\u7b97: logical_not\u51fd\u6570</p> </li> <li> <p>\u5f02\u6216\u8fd0\u7b97: logical_xor\u51fd\u6570</p> </li> </ol> <pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(np.logical_and(n1, n2))\n\"\"\"\n[ True  True  True  True]\n\"\"\"\n\nprint(np.logical_and(n1, n3))\n\"\"\"\n[[ True  True  True  True]\n [ True  True  True  True]]\n\"\"\"\n\nprint(np.logical_and(n1, n4))\n\"\"\"\n[[ True  True  True  True]\n [ True  True  True  True]]\n\"\"\"\n\nprint(np.logical_and(n3, n4))\n\"\"\"\n[[ True  True  True  True]\n [ True  True  True  True]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_7","title":"\u6309\u4f4d\u8fd0\u7b97","text":"<ol> <li> <p>\u4e0e\u8fd0\u7b97: &amp;\u3001bitwise_and\u51fd\u6570</p> </li> <li> <p>\u6216\u8fd0\u7b97: |\u3001bitwise_or\u51fd\u6570</p> </li> <li> <p>\u5f02\u6216\u8fd0\u7b97: ^\u3001bitwise_xor\u51fd\u6570</p> </li> <li> <p>\u5de6\u79fb\u4f4d\u8fd0\u7b97: &lt;&lt;\u3001left_shift\u51fd\u6570</p> </li> <li> <p>\u53f3\u79fb\u4f4d\u8fd0\u7b97: &gt;&gt;\u3001right_shift\u51fd\u6570</p> </li> <li> <p>\u53d6\u53cd\u8fd0\u7b97: ~\u3001invert\u51fd\u6570</p> </li> </ol> <pre><code>n1 = np.array([1, 2, 3, 4])\nn2 = np.array([5, 6, 7, 8])\nn3 = np.array([[1], [5]])\nn4 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\n\nprint(n1 &amp; n2)\n\"\"\"\n[1 2 3 0]\n\"\"\"\n\nprint(n1 &amp; n3)\n\"\"\"\n[[1 0 1 0]\n [1 0 1 4]]\n\"\"\"\n\nprint(n1 &amp; n4)\n\"\"\"\n[[1 2 3 4]\n [1 2 3 0]]\n\"\"\"\n\nprint(n3 &amp; n4)\n\"\"\"\n[[1 0 1 0]\n [5 4 5 0]]\n\"\"\"\n\nprint(np.bitwise_and(n3, n4))\n\"\"\"\n[[1 0 1 0]\n [5 4 5 0]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_8","title":"\u6807\u91cf\u8fd0\u7b97","text":"<p>\u5373\u4e0e\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u8fdb\u884c\u8fd0\u7b97\uff0c\u6570\u7ec4\u4e2d\u6bcf\u4e2a\u6570\u636e\u90fd\u4e0e\u8be5\u6570\u8fdb\u884c\u8fd0\u7b97</p> <pre><code>n0 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nprint(n0 * 2)\n\"\"\"\n[[ 2  4  6  8]\n [10 12 14 16]]\n\"\"\"\n\nn1 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nprint(n1 &gt; 2)\n\"\"\"\n[[False False  True  True]\n [ True  True  True  True]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_9","title":"\u6570\u7ec4\u7d22\u5f15\u4e0e\u5207\u7247","text":"<p>\u7c7b\u4f3c\u5217\u8868\u3001\u5143\u7ec4\u7b49\uff0c\u5bf9\u4e8e\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4\u6709\u5176\u72ec\u7279\u7684\u7d22\u5f15\u548c\u5207\u7247\u65b9\u5f0f\uff0c\u9010\u5c42\u7d22\u5f15 \u7ed3\u6784\u5316\u6570\u7ec4\u7684\u7d22\u5f15\u7c7b\u4f3c\u4e8e\u5b57\u5178</p> <ol> <li> <p>ndarray[n][m]...</p> </li> <li> <p>ndarray[n, m, ...]</p> </li> </ol> <pre><code># \u4e00\u7ef4\u6570\u7ec4\nn0 = np.arange(10)\nprint(n0)\n\"\"\"\n[0 1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nprint(n0[3])\n\"\"\"\n3\n\"\"\"\nprint(n0[:4])\n\"\"\"\n[0 1 2 3]\n\"\"\"\n\nprint(n0[2:])\n\"\"\"\n[2 3 4 5 6 7 8 9]\n\"\"\"\n\nprint(n0[1:9:2])\n\"\"\"\n[1 3 5 7]\n\"\"\"\n\nprint(n0[::-1])\n\"\"\"\n[9 8 7 6 5 4 3 2 1 0]\n\"\"\"\n\n\n\n# \u4e8c\u7ef4\u6570\u7ec4\nn1 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nprint(n1)\n\"\"\"\n[[1 2 3 4]\n [5 6 7 8]]\n\"\"\"\n\nprint(n1[1])\n\"\"\"\n[5 6 7 8]\n\"\"\"\n\nprint(n1[0][2])\n\"\"\"\n3\n\"\"\"\n\nprint(n1[0][1:])\n\"\"\"\n[2 3 4]\n\"\"\"\n\nprint(n1[1, ])\n\"\"\"\n[5 6 7 8]\n\"\"\"\n\nprint(n1[0, 2])\n\"\"\"\n3\n\"\"\"\n\nprint(n1[0, 1:])\n\"\"\"\n[2 3 4]\n\"\"\"\n\nprint(n1[0:, 2:])\n\"\"\"\n[[3 4]\n [7 8]]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn2 = np.array([[[1, 2, 3, 4], [5, 6, 7, 8]], [[\"a\", \"b\", \"c\", \"d\"], [\"e\", \"f\", \"g\", \"h\"]]])\nprint(n2)\n\"\"\"\n[[['1' '2' '3' '4']\n  ['5' '6' '7' '8']]\n\n [['a' 'b' 'c' 'd']\n  ['e' 'f' 'g' 'h']]]\n\"\"\"\n\nprint(n2[1])\n\"\"\"\n[['a' 'b' 'c' 'd']\n ['e' 'f' 'g' 'h']]\n\"\"\"\n\nprint(n2[0][1])\n\"\"\"\n['5' '6' '7' '8']\n\"\"\"\n\nprint(n2[0][1][3])\n\"\"\"\n8\n\"\"\"\n\nprint(n2[0][0][2:])\n\"\"\"\n['3' '4']\n\"\"\"\n\nprint(n2[1, ])\n\"\"\"\n[['a' 'b' 'c' 'd']\n ['e' 'f' 'g' 'h']]\n\"\"\"\n\nprint(n2[0, 1])\n\"\"\"\n['5' '6' '7' '8']\n\"\"\"\n\nprint(n2[0, 1, 3])\n\"\"\"\n8\n\"\"\"\n\nprint(n2[0:, 1:, 2:])\n\"\"\"\n[[['7' '8']]\n\n [['g' 'h']]]\n\"\"\"\n\n\n\n# \u7ed3\u6784\u5316\u6570\u7ec4\ndtype = np.dtype([('name', 'S10'), ('age', int), ('height', float)])\ndata = np.array([('Alice', 25, 5.6), ('Bob', 30, 6.0)], dtype=dtype)\nprint(data)\n\"\"\"\n[(b'Alice', 25, 5.6) (b'Bob', 30, 6. )]\n\"\"\"\n\nprint(data[\"name\"])\n\"\"\"\n[b'Alice' b'Bob']\n\"\"\"\n\nprint(data[\"age\"])\n\"\"\"\n[25 30]\n\"\"\"\n\nprint(data[\"height\"])\n\"\"\"\n[5.6 6. ]\n\"\"\"\n\nprint(data[\"height\"][1:])\n\"\"\"\n[6.]\n\"\"\"\n\nprint(data[data[\"age\"] &gt; 26])\n\"\"\"\n[(b'Bob', 30, 6.)]\n\"\"\"\n\ndtype_nested = np.dtype([('info', [('name', 'S10'), ('age', int)]), ('height', float)])\ndata_nested = np.array([(('Alice', 25), 5.6), (('Bob', 30), 6.0)], dtype=dtype_nested)\nprint(data_nested)\n\"\"\"\n[((b'Alice', 25), 5.6) ((b'Bob', 30), 6. )]\n\"\"\"\n\nprint(data_nested[\"info\"])\n\"\"\"\n[(b'Alice', 25) (b'Bob', 30)]\n\"\"\"\n\nprint(data_nested[\"info\"][\"name\"])\n\"\"\"\n[b'Alice' b'Bob']\n\"\"\"\n\nprint(data_nested[\"info\"][\"age\"])\n\"\"\"\n[25 30]\n\"\"\"\n\nprint(data_nested[\"height\"])\n\"\"\"\n[5.6 6. ]\n\"\"\"\n\nprint(data_nested[\"height\"][1:])\n\"\"\"\n[6.]\n\"\"\"\n\nprint(data_nested[data_nested[\"info\"][\"age\"] &gt; 26])\n\"\"\"\n[((b'Bob', 30), 6.)]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#reshape","title":"\u6570\u7ec4\u91cd\u5851(reshape)","text":"<p>\u5373\u6539\u53d8\u6570\u7ec4\u7684\u5f62\u72b6\uff0c\u9700\u6ce8\u610f\u6539\u53d8\u5f62\u72b6\u540e\u7684\u6570\u7ec4size\u5fc5\u987b\u4e0e\u539f\u6570\u7ec4size\u76f8\u540c</p>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#reshape_1","title":"reshape\u65b9\u6cd5","text":"<p><code>ndarray.reshape(shape, order='C')</code></p> <ol> <li> <p>shape: \u65b0\u5f62\u72b6\uff0c\u53c2\u6570\u7684\u5143\u7d20\u53ef\u4f5c\u4e3a\u5355\u72ec\u7684\u53c2\u6570\u4f20\u5165</p> </li> <li> <p>order: \u8bfb\u53d6\u53ca\u5199\u5165\u7684\u987a\u5e8f\u3002\u53ef\u9009\"C\"\uff08\u6309\u884c\uff0c\u9ed8\u8ba4\uff09\u3001\"F\"\uff08\u6309\u5217\uff09</p> </li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn1 = n0.reshape(3, 4)\nprint(n1)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn2 = n0.reshape([3, 4])\nprint(n2)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn3 = n0.reshape(3, 4, order=\"F\")\nprint(n3)\n\"\"\"\n[[ 0  3  6  9]\n [ 1  4  7 10]\n [ 2  5  8 11]]\n\"\"\"\n\nn4 = n3.reshape(2, 6, order=\"C\")\nprint(n4)\n\"\"\"\n[[ 0  3  6  9  1  4]\n [ 7 10  2  5  8 11]]\n\"\"\"\n\nn5 = n3.reshape(2, 6, order=\"F\")\nprint(n5)\n\"\"\"\n[[ 0  2  4  6  8 10]\n [ 1  3  5  7  9 11]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#reshape_2","title":"reshape\u51fd\u6570","text":"<p><code>reshape(a, newshape, order='C')</code></p> <ol> <li> <p>a: \u539f\u6570\u7ec4</p> </li> <li> <p>newshape: \u540c\u4e0a\uff0c\u4f46\u53c2\u6570\u7684\u5143\u7d20\u4e0d\u53ef\u4f5c\u4e3a\u5355\u72ec\u7684\u53c2\u6570\u4f20\u5165</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn6 = np.reshape(n0, [3, 4])\nprint(n6)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#transpose","title":"\u6570\u7ec4\u8f6c\u7f6e(transpose)","text":"<p>\u5373\u884c\u5217\u8f6c\u6362</p> <ol> <li> <p>\u4e00\u7ef4\u6570\u7ec4\u8f6c\u7f6e\u540e\u4ecd\u4e3a\u539f\u6570\u7ec4</p> </li> <li> <p>\u4e8c\u7ef4\u6570\u7ec4\u8f6c\u7f6e\u540e\u5373\u4e24\u4e2a\u8f74\u4e92\u6362</p> </li> <li> <p>\u4e09\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4\u8f6c\u7f6e\u53ef\u81ea\u5b9a\u4e49\u8f74\u7684\u987a\u5e8f</p> </li> </ol>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#t","title":"T\u5c5e\u6027","text":"<p><code>ndarray.T</code></p> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn1 = np.arange(12).reshape(3, 4)\nprint(n1)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn2 = n0.T\nprint(n2)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn3 = n1.T\nprint(n3)\n\"\"\"\n[[ 0  4  8]\n [ 1  5  9]\n [ 2  6 10]\n [ 3  7 11]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#transpose_1","title":"transpose\u65b9\u6cd5","text":"<p><code>ndarray.transpose(*axes)</code></p> <ol> <li>axes: \u5373\u8f74\u7684\u987a\u5e8f\u3002\u8f74i\u5728\u7b2cj\u4e2a\u4f4d\u7f6e\uff0c\u8868\u793a\u5c06\u539f\u6570\u7ec4\u7684\u8f74i\u53d8\u4e3a\u8f6c\u7f6e\u6570\u7ec4\u7684\u8f74j\u3002\u82e5\u672a\u6307\u5b9a\uff0c\u5219\u76f4\u63a5\u9006\u8f6c\u8f74\u7684\u987a\u5e8f</li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn1 = np.arange(12).reshape(3, 4)\nprint(n1)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn4 = n0.transpose()\nprint(n4)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn5 = n1.transpose()\nprint(n5)\n\"\"\"\n[[ 0  4  8]\n [ 1  5  9]\n [ 2  6 10]\n [ 3  7 11]]\n\"\"\"\n\nn6 = np.ones([3, 4, 5])    # \u8f740\u5927\u5c0f\u4e3a3\uff0c\u8f741\u5927\u5c0f\u4e3a4\uff0c \u8f742\u5927\u5c0f\u4e3a5\nprint(n6, n6.shape)\n\"\"\"\n[[[1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]]\n\n [[1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]]\n\n [[1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]\n  [1. 1. 1. 1. 1.]]] (3, 4, 5)\n\"\"\"\n\n\nn7 = n6.transpose(2, 0, 1)    # \u8f742\u53d8\u8f740\uff0c\u73b0\u8f740\u5927\u5c0f\u4e3a5\uff1b\u8f740\u53d8\u8f741\uff0c\u73b0\u8f741\u5927\u5c0f\u4e3a3\uff1b\u8f741\u53d8\u8f742\uff0c\u73b0\u8f742\u5927\u5c0f\u4e3a4\nprint(n7, n7.shape)\n\"\"\"\n[[[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]] (5, 3, 4)\n\"\"\"\n\nn8 = n6.transpose()    # \u76f4\u63a5\u9006\u8f6c\u8f74\u7684\u987a\u5e8f\uff0c\u8f742\u53d8\u8f740\uff0c\u8f741\u53d8\u8f741\uff0c\u8f740\u53d8\u8f742\nprint(n8, n8.shape)\n\"\"\"\n[[[1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]]\n\n [[1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]]\n\n [[1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]]\n\n [[1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]]\n\n [[1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]\n  [1. 1. 1.]]] (5, 4, 3)\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#transpose_2","title":"transpose\u51fd\u6570","text":"<p><code>transpose(a, axes=None)</code></p> <ol> <li> <p>a: \u539f\u6570\u7ec4</p> </li> <li> <p>axes: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn1 = np.arange(12).reshape(3, 4)\nprint(n1)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn9 = np.transpose(n0)\nprint(n9)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn10 = np.transpose(n1)\nprint(n10)\n\"\"\"\n[[ 0  4  8]\n [ 1  5  9]\n [ 2  6 10]\n [ 3  7 11]]\n\"\"\"\n\nn11 = np.transpose(np.ones([3, 4, 5]), axes=[2, 0, 1])\nprint(n11, n11.shape)\n\"\"\"\n[[[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]\n\n [[1. 1. 1. 1.]\n  [1. 1. 1. 1.]\n  [1. 1. 1. 1.]]] (5, 3, 4)\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_10","title":"\u6570\u7ec4\u62fc\u63a5","text":""},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#concatenate","title":"concatenate\u51fd\u6570","text":"<p><code>concatenate(arrays, axis=0, out=None, dtype=None, casting=\"same_kind\")</code></p> <ol> <li> <p>arrays: \u7ef4\u5ea6\uff08ndim\uff09\u76f8\u540c\u7684\u6570\u7ec4\u5e8f\u5217\u3002\u8fd9\u4e9b\u6570\u7ec4\u9664\u4e86\u6307\u5b9aaxis\u65b9\u5411\uff0c\u5176\u5b83\u8f74\u65b9\u5411\u4e0a\u5927\u5c0f\u5fc5\u987b\u76f8\u540c</p> </li> <li> <p>axis: \u6cbf\u8be5\u5df2\u6709\u7684\u8f74\u8fdb\u884c\u62fc\u63a5\uff0c\u4e0d\u4f1a\u4ea7\u751f\u65b0\u7684\u8f74\u3002\u9ed8\u8ba4\u4e3a0\u3002\u82e5axis\u4e3aNone\uff0c\u5219\u6240\u6709\u6570\u7ec4\u5c06\u88ab\u89c6\u4e3a\u4e00\u7ef4\u6570\u7ec4</p> </li> <li> <p>out: \u653e\u7f6e\u7ed3\u679c\u7684\u76ee\u6807\u6570\u7ec4\u3002\u5f62\u72b6\u5fc5\u987b\u4e0e\u62fc\u63a5\u540e\u6570\u7ec4\u7684\u5f62\u72b6\u5339\u914d\u3002out\u6570\u7ec4\u7684\u6570\u636e\u7c7b\u578b\u51b3\u5b9a\u8f93\u51fa\u7ed3\u679c\u7684\u6570\u636e\u7c7b\u578b</p> </li> <li> <p>dtype: \u6570\u636e\u7c7b\u578b\u3002\u540c\u4e0a\u3002\u4e0d\u80fd\u4e0eout\u53c2\u6570\u540c\u65f6\u63d0\u4f9b</p> </li> <li> <p>casting: \u63a7\u5236\u53ef\u80fd\u53d1\u751f\u7684\u6570\u636e\u8f6c\u6362\u7c7b\u578b\u3002\u53ef\u9009'no'\u3001'equiv'\u3001'safe'\u3001'same_kind'\uff08\u9ed8\u8ba4\uff09\u3001'unsafe'</p> </li> </ol> <pre><code># \u4e8c\u7ef4\u6570\u7ec4\nn0 = np.array([[1, 2, 3, 4]])\nn1 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn2 = np.concatenate([n0, n1], axis=0)\nprint(n2)\n\"\"\"\n[[ 1  2  3  4]\n [11 12 13 14]\n [15 16 17 18]]\n\"\"\"\n\nn3 = np.array([[1, 2, 3, 4, 5], [5, 6, 7, 8, 9]])\nn4 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn5 = np.concatenate([n3, n4], axis=1)\nprint(n5)\n\"\"\"\n[[ 1  2  3  4  5 11 12 13 14]\n [ 5  6  7  8  9 15 16 17 18]]\n\"\"\"\n\nn6 = np.array([[1, 2, 3, 4, 5], [5, 6, 7, 8, 9]])\nn7 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn8 = np.concatenate([n6, n7], axis=None)\nprint(n8)\n\"\"\"\n[ 1  2  3  4  5  5  6  7  8  9 11 12 13 14 15 16 17 18]\n\"\"\"\n\nn9 = np.array([[1, 2, 3, 4, 5], [5, 6, 7, 8, 9]])\nn10 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn11 = np.concatenate([n9, n10], axis=1, out=np.ones([2, 9]))\nprint(n11)\n\"\"\"\n[[ 1.  2.  3.  4.  5. 11. 12. 13. 14.]\n [ 5.  6.  7.  8.  9. 15. 16. 17. 18.]]\n\"\"\"\n\n\n\n# \u4e00\u7ef4\u6570\u7ec4\nn12 = np.array([1, 2, 3, 4])\nn13 = np.array([11, 12, 13, 14])\nn14 = np.concatenate([n12, n13], axis=0)    # \u6ce8\u610f\u53ea\u6709\u8f740\uff0c\u4e14\u4e3a\u4e00\u7ef4\u6570\u7ec4\u7684\u5df2\u6709\u8f740\nprint(n14)\n\"\"\"\n[ 1  2  3  4 11 12 13 14]\n\"\"\"\nn15 = np.array([[1, 2, 3, 4]])\nn16 = np.array([[11, 12, 13, 14]])\nn17 = np.concatenate([n15, n16], axis=0)    # \u5747\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u4e00\u884c\u800c\u975e\u4e00\u7ef4\u6570\u7ec4\uff0c\u8f740\u4e3a\u4e8c\u7ef4\u6570\u7ec4\u7684\u8f740\nprint(n17)\n\"\"\"\n[[ 1  2  3  4]\n [11 12 13 14]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#vstackrow_stack0","title":"vstack\uff08row_stack\uff09\u51fd\u6570\uff1a\u8f740(\u5782\u76f4)\u65b9\u5411","text":"<p><code>vstack(tup, dtype=None, casting=\"same_kind\")</code></p> <p>&lt;=&gt;<code>concatenate(arrays, axis=0)</code>\uff08\u4e00\u7ef4\u6570\u7ec4\u56e0\u65e0\u5782\u76f4\u65b9\u5411\uff0c\u9700\u8f6c\u5316\u4e3a\u4e00\u884c\u4e8c\u7ef4\u6570\u7ec4\uff09</p> <ol> <li> <p>tup: \u6570\u7ec4\u5e8f\u5217\u3002\u8fd9\u4e9b\u6570\u7ec4\u9664\u4e86\u8f740\u65b9\u5411\uff0c\u5176\u5b83\u8f74\u65b9\u5411\u4e0a\u5927\u5c0f\u5fc5\u987b\u76f8\u540c\uff08\u6ce8\u610f\u4e00\u7ef4\u6570\u7ec4\u8f74\u7684\u533a\u522b\uff09</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>casting: \u540c\u4e0a</p> </li> </ol> <pre><code>n18 = np.array([1, 2, 3, 4])\nn19 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn20 = np.vstack([n18, n19])\nprint(n20)\n\"\"\"\n[[ 1  2  3  4]\n [11 12 13 14]\n [15 16 17 18]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#hstack1","title":"hstack\u51fd\u6570\uff1a\u8f741(\u6c34\u5e73)\u65b9\u5411","text":"<p><code>hstack(tup, dtype=None, casting=\"same_kind\")</code></p> <p>\u4e00\u7ef4\u6570\u7ec4: &lt;=&gt;<code>concatenate(arrays, axis=0)</code></p> <p>\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4: &lt;=&gt;<code>concatenate(arrays, axis=1)</code></p> <ol> <li> <p>tup: \u540c\u4e0a\u3002\u8fd9\u4e9b\u6570\u7ec4\u9664\u4e86\u8f741\u65b9\u5411\uff0c\u5176\u5b83\u8f74\u65b9\u5411\u4e0a\u5927\u5c0f\u5fc5\u987b\u76f8\u540c\uff08\u6ce8\u610f\u4e00\u7ef4\u6570\u7ec4\u8f74\u7684\u533a\u522b\uff09</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>casting: \u540c\u4e0a</p> </li> </ol> <pre><code>n21 = np.array([[1, 2, 3, 4, 5], [5, 6, 7, 8, 9]])\nn22 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn23 = np.hstack([n21, n22])\nprint(n23)\n\"\"\"\n[[ 1  2  3  4  5 11 12 13 14]\n [ 5  6  7  8  9 15 16 17 18]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#dstack2","title":"dstack\u51fd\u6570\uff1a\u8f742\u65b9\u5411","text":"<p><code>dstack(tup, dtype=None, casting=\"same_kind\")</code></p> <p>&lt;=&gt;<code>concatenate(arrays, axis=2)</code>\uff08\u53ea\u6709\u4e09\u7ef4\u6570\u7ec4\u6709\u8f742\uff0c\u5747\u9700\u8f6c\u6362\u4e3a\u4e09\u7ef4\u6570\u7ec4\uff09</p> <ol> <li> <p>tup: \u540c\u4e0a\u3002\u8fd9\u4e9b\u6570\u7ec4\u9664\u4e86\u8f742\u65b9\u5411\uff0c\u5176\u5b83\u8f74\u65b9\u5411\u4e0a\u5927\u5c0f\u5fc5\u987b\u76f8\u540c\uff08\u6ce8\u610f\u4e00\u7ef4\u6570\u7ec4\u8f74\u7684\u533a\u522b\uff09</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>casting: \u540c\u4e0a</p> </li> </ol> <pre><code>n24 = np.array([1, 2, 3, 4])\nn25 = np.array([11, 12, 13, 14])\nn26 = np.dstack([n24, n25])\nprint(n26)\n\"\"\"\n[[[ 1 11]\n  [ 2 12]\n  [ 3 13]\n  [ 4 14]]]\n\"\"\"\n\nn27 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nn28 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn29 = np.dstack([n27, n28])\nprint(n29)\n\"\"\"\n[[[ 1 11]\n  [ 2 12]\n  [ 3 13]\n  [ 4 14]]\n\n [[ 5 15]\n  [ 6 16]\n  [ 7 17]\n  [ 8 18]]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#column_stack","title":"column_stack\u51fd\u6570","text":"<p>\u4e00\u7ef4\u6570\u7ec4\u5c06\u88ab\u8f6c\u53d8\u4e3a\u4e00\u5217\u4e8c\u7ef4\u6570\u7ec4\uff0c\u7136\u540e\u8fdb\u884c\u6c34\u5e73\u62fc\u63a5</p> <p><code>column_stack(tup)</code></p> <ol> <li>tup: \u540c\u4e0a\u3002\u6ce8\u610f\u5782\u76f4\u65b9\u5411\u4e0a\u5927\u5c0f\u5339\u914d</li> </ol> <pre><code>n30 = np.array([1, 2, 3, 4])\nn31 = np.array([11, 12, 13, 14])\nn32 = np.column_stack([n30, n31])\nprint(n32)\n\"\"\"\n[[ 1 11]\n [ 2 12]\n [ 3 13]\n [ 4 14]]\n\"\"\"\n\nn33 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nn34 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn35 = np.column_stack([n33, n34])\nprint(n35)\n\"\"\"\n[[ 1  2  3  4 11 12 13 14]\n [ 5  6  7  8 15 16 17 18]]\n\"\"\"\n\nn36 = np.array([1, 2])\nn37 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn38 = np.column_stack([n36, n37])\nprint(n38)\n\"\"\"\n[[ 1 11 12 13 14]\n [ 2 15 16 17 18]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_11","title":"\u6570\u7ec4\u5806\u53e0","text":""},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#stack","title":"stack\u51fd\u6570","text":"<p><code>stack(arrays, axis=0, out=None, dtype=None, casting=\"same_kind\")</code></p> <ol> <li> <p>arrays: \u5f62\u72b6\u76f8\u540c\u7684\u6570\u7ec4\u5e8f\u5217\u3002\u8fd9\u4e9b\u6570\u7ec4\u5f62\u72b6\u5fc5\u987b\u76f8\u540c\uff0c\u56e0\u6240\u6cbf\u7684\u8f74\u4e3a\u4e00\u4e2a\u65b0\u8f74</p> </li> <li> <p>axis: \u6307\u5b9a\u65b0\u8f74\u7684\u7d22\u5f15\uff0c\u5e76\u6cbf\u8be5\u65b0\u8f74\u8fdb\u884c\u5806\u53e0\u3002\u9ed8\u8ba4\u4e3a0</p> </li> <li> <p>out: \u540c\u4e0a</p> </li> <li> <p>dtype: \u540c\u4e0a</p> </li> <li> <p>casting: \u540c\u4e0a</p> </li> </ol> <pre><code># \u4e00\u7ef4\u6570\u7ec4\nn39 = np.array([1, 2, 3, 4])\nn40 = np.array([11, 12, 13, 14])\nn41 = np.stack([n39, n40], axis=0)    # \u65b0\u8f74\u4e3a\u8f740\uff08\u6b64\u65f6\u6ce8\u610f\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u8f740\uff09\uff0c\u539f\u8f740\u53d8\u4e3a\u8f741\uff0c\u6cbf\u8f740\u5806\u53e0\nprint(n41)\n\"\"\"\n[[ 1  2  3  4]\n [11 12 13 14]]\n\"\"\"\n\nn42 = np.stack([n39, n40], axis=1)    # \u65b0\u8f74\u4e3a\u8f741\uff0c\u539f\u8f740\u4ecd\u4e3a\u8f740\uff08\u6b64\u65f6\u6ce8\u610f\u662f\u4e8c\u7ef4\u6570\u7ec4\u7684\u8f740\uff09\uff0c\u6cbf\u8f741\u5806\u53e0\nprint(n42)\n\"\"\"\n[[ 1 11]\n [ 2 12]\n [ 3 13]\n [ 4 14]]\n\"\"\"\n\n\n\n# \u4e8c\u7ef4\u6570\u7ec4\nn43 = np.array([[1, 2, 3, 4], [5, 6, 7, 8]])\nn44 = np.array([[11, 12, 13, 14], [15, 16, 17, 18]])\nn45 = np.stack([n43, n44], axis=0)    # \u65b0\u8f74\u4e3a\u8f740\uff0c\u539f\u8f740\u53d8\u4e3a\u8f741\uff0c\u539f\u8f741\u53d8\u4e3a\u8f742\uff0c\u6cbf\u8f740\u5806\u53e0\nprint(n45)\n\"\"\"\n[[[ 1  2  3  4]\n  [ 5  6  7  8]]\n\n [[11 12 13 14]\n  [15 16 17 18]]]\n\"\"\"\n\nn46 = np.stack([n43, n44], axis=1)    # \u65b0\u8f74\u4e3a\u8f741\uff0c\u539f\u8f740\u4ecd\u4e3a\u8f740\uff0c\u539f\u8f741\u53d8\u4e3a\u8f742\uff0c\u6cbf\u8f740\u5806\u53e0\nprint(n46)\n\"\"\"\n[[[ 1  2  3  4]\n  [11 12 13 14]]\n\n [[ 5  6  7  8]\n  [15 16 17 18]]]\n\"\"\"\n\nn47 = np.stack([n43, n44], axis=2)    # \u65b0\u8f74\u4e3a\u8f742\uff0c\u539f\u8f740\u4ecd\u4e3a\u8f740\uff0c\u539f\u8f741\u4ecd\u4e3a\u8f741\uff0c\u6cbf\u8f742\u5806\u53e0\nprint(n47)\n\"\"\"\n[[[ 1 11]\n  [ 2 12]\n  [ 3 13]\n  [ 4 14]]\n\n [[ 5 15]\n  [ 6 16]\n  [ 7 17]\n  [ 8 18]]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_12","title":"\u6570\u7ec4\u62c6\u5206","text":""},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#split","title":"split\u51fd\u6570","text":"<p><code>split(ary, indices_or_sections, axis=0)</code></p> <ol> <li> <p>ary: \u5f85\u62c6\u5206\u7684\u6570\u7ec4</p> </li> <li> <p>indices_or_sections: \u6574\u6570\u6216\u5217\u8868\u3001\u6570\u7ec4\u7b49\u3002\u5982\u679c\u662f\u4e00\u4e2a\u6574\u6570N\uff0c\u5c06\u6cbf\u8f74\u62c6\u5206\u6210N\u4e2a\u76f8\u7b49\u5927\u5c0f\u7684\u6570\u7ec4\uff0c\u82e5\u4e0d\u80fd\u76f8\u7b49\u5c06\u62a5\u9519\uff1b\u5982\u679c\u4e3a\u5217\u8868\u3001\u6570\u7ec4\u7b49\uff0c\u5143\u7d20\u8868\u793a\u62c6\u5206\u7684\u4f4d\u7f6e\uff0c\u5982[2, 3]\u8868\u793a\u62c6\u5206\u4e3aary[:2]\u3001ary[2:3]\u3001ary[3:]\uff0c\u82e5\u8d85\u51fa\u7d22\u5f15\u5c06\u8fd4\u56de\u4e00\u4e2a\u7a7a\u7684\u5b50\u6570\u7ec4</p> </li> <li> <p>axis: \u62c6\u5206\u65f6\u6cbf\u7684\u8f74\u3002\u9ed8\u8ba4\u4e3a0</p> </li> </ol> <pre><code>n0 = np.arange(15)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n\"\"\"\n\nn1 = np.split(n0, 5)\nprint(n1)\n\"\"\"\n[array([0, 1, 2]), array([3, 4, 5]), array([6, 7, 8]), array([ 9, 10, 11]), array([12, 13, 14])]\n\"\"\"\n\nn2 = np.split(n0, [3, 6, 7, 18])\nprint(n2)\n\"\"\"\n[array([0, 1, 2]), array([3, 4, 5]), array([6]), array([ 7,  8,  9, 10, 11, 12, 13, 14]), array([], dtype=int32)]\n\"\"\"\n\nn3 = np.arange(24).reshape([4, 6])\nprint(n3)\n\"\"\"\n[[ 0  1  2  3  4  5]\n [ 6  7  8  9 10 11]\n [12 13 14 15 16 17]\n [18 19 20 21 22 23]]\n\"\"\"\n\nn4 = np.split(n3, 2, axis=0)\nprint(n4)\n\"\"\"\n[array([[ 0,  1,  2,  3,  4,  5],\n       [ 6,  7,  8,  9, 10, 11]]), \n array([[12, 13, 14, 15, 16, 17],\n       [18, 19, 20, 21, 22, 23]])]\n\"\"\"\n\nn5 = np.split(n3, 2, axis=1)\nprint(n5)\n\"\"\"\n[array([[ 0,  1,  2],\n       [ 6,  7,  8],\n       [12, 13, 14],\n       [18, 19, 20]]), \n array([[ 3,  4,  5],\n       [ 9, 10, 11],\n       [15, 16, 17],\n       [21, 22, 23]])]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#vsplit0","title":"vsplit\u51fd\u6570\uff1a\u8f740\u65b9\u5411\u6216\u5782\u76f4\u65b9\u5411","text":"<p>\u4ec5\u7528\u4e8e\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4</p> <p><code>vsplit(ary, indices_or_sections)</code></p> <p>&lt;=&gt;<code>split(ary, indices_or_sections, axis=0)</code></p> <pre><code>n6 = np.arange(24).reshape([4, 6])\nprint(n6)\n\"\"\"\n[[ 0  1  2  3  4  5]\n [ 6  7  8  9 10 11]\n [12 13 14 15 16 17]\n [18 19 20 21 22 23]]\n\"\"\"\n\nn7 = np.vsplit(n6, 2)\nprint(n7)\n\"\"\"\n[array([[ 0,  1,  2,  3,  4,  5],\n       [ 6,  7,  8,  9, 10, 11]]), \n array([[12, 13, 14, 15, 16, 17],\n       [18, 19, 20, 21, 22, 23]])]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#hsplit1","title":"hsplit\u51fd\u6570\uff1a\u8f741\u65b9\u5411\u6216\u6c34\u5e73\u65b9\u5411","text":"<p>\u4e00\u7ef4\u6570\u7ec4\u6cbf\u8f740\u65b9\u5411\uff0c\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4\u6cbf\u8f741\u65b9\u5411</p> <p><code>hsplit(ary, indices_or_sections)</code></p> <p>\u4e00\u7ef4\u6570\u7ec4\uff1a&lt;=&gt;<code>split(ary, indices_or_sections, axis=0)</code></p> <p>\u4e8c\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4\uff1a&lt;=&gt;<code>split(ary, indices_or_sections, axis=1)</code></p> <pre><code>n8 = np.arange(15)\nprint(n8)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n\"\"\"\n\nn9 = np.hsplit(n8, 5)\nprint(n9)\n\"\"\"\n[array([0, 1, 2]), array([3, 4, 5]), array([6, 7, 8]), array([ 9, 10, 11]), array([12, 13, 14])]\n\"\"\"\n\nn01 = np.arange(24).reshape([4, 6])\nprint(n10)\n\"\"\"\n[[ 0  1  2  3  4  5]\n [ 6  7  8  9 10 11]\n [12 13 14 15 16 17]\n [18 19 20 21 22 23]]\n\"\"\"\n\nn11 = np.hsplit(n10, 2)\nprint(n11)\n\"\"\"\n[array([[ 0,  1,  2],\n       [ 6,  7,  8],\n       [12, 13, 14],\n       [18, 19, 20]]), \n array([[ 3,  4,  5],\n       [ 9, 10, 11],\n       [15, 16, 17],\n       [21, 22, 23]])]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#dsplit2","title":"dsplit\u51fd\u6570\uff1a\u8f742\u65b9\u5411","text":"<p>\u4ec5\u7528\u4e8e\u4e09\u7ef4\u53ca\u4ee5\u4e0a\u6570\u7ec4</p> <p><code>dsplit(ary, indices_or_sections)</code></p> <p>&lt;=&gt;<code>split(ary, indices_or_sections, axis=2)</code></p> <pre><code>n12 = np.arange(16).reshape([2, 2, 4])\nprint(n12)\n\"\"\"\n[[[ 0  1  2  3]\n  [ 4  5  6  7]]\n\n [[ 8  9 10 11]\n  [12 13 14 15]]]\n\"\"\"\n\nn13 = np.dsplit(n12, 2)\nprint(n13)\n\"\"\"\n[array([[[ 0,  1],\n        [ 4,  5]],\n\n       [[ 8,  9],\n        [12, 13]]]), \n array([[[ 2,  3],\n        [ 6,  7]],\n\n       [[10, 11],\n        [14, 15]]])]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#array_split","title":"array_split\u51fd\u6570","text":"<p>\u4e0esplit\u51fd\u6570\u7c7b\u4f3c\uff0c\u533a\u522b\u662f\u5f53\u4e0d\u80fd\u5206\u6210\u76f8\u7b49\u5927\u5c0f\u7684\u5b50\u6570\u7ec4\u65f6\u4e0d\u4f1a\u62a5\u9519</p> <p><code>array_split(ary, indices_or_sections, axis=0)</code></p> <ol> <li> <p>ary: \u540c\u4e0a</p> </li> <li> <p>indices_or_sections: \u540c\u4e0a\u3002\u5728\u67d0\u4e00\u8f74\u4e0a\uff0c\u957f\u5ea6\u4e3aL\uff0c\u62c6\u5206\u6210N\u4e2a\u90e8\u5206\uff0c\u8fd4\u56deL%N\u4e2a\u8be5\u8f74\u4e0a\u957f\u5ea6\u4e3aL//N+1\u7684\u5b50\u6570\u7ec4\uff0c\u5176\u4f59\u5b50\u6570\u7ec4\u8be5\u8f74\u4e0a\u957f\u5ea6\u4e3aL//N</p> </li> <li> <p>axis: \u540c\u4e0a</p> </li> </ol> <pre><code>n14 = np.arange(15)\nprint(n14)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14]\n\"\"\"\n\nn15 = np.array_split(n14, 4)    #15%4=3\u4e2a\u957f\u5ea6\u4e3a15//4+1=4\u7684\u5b50\u6570\u7ec4\u548c4-3=1\u4e2a\u957f\u5ea6\u4e3a15//4=3\u7684\u5b50\u6570\u7ec4\nprint(n15)\n\"\"\"\n[array([0, 1, 2, 3]), array([4, 5, 6, 7]), array([ 8,  9, 10, 11]), array([12, 13, 14])]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_13","title":"\u6570\u7ec4\u5220\u9664","text":"<p>\u7b80\u5355\u7684\u65b9\u5f0f\u53ef\u901a\u8fc7\u7d22\u5f15\u548c\u5207\u7247\u9009\u53d6\u6240\u9700\u6570\u7ec4\u6216\u5143\u7d20\u5373\u53ef</p>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#delete","title":"delete\u51fd\u6570","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u5220\u9664\u4e86\u539f\u6570\u7ec4\u6cbf\u6307\u5b9a\u8f74\u6307\u5b9a\u7d22\u5f15\u7684\u6570\u7ec4</p> <p><code>delete(arr, obj, axis=None)</code></p> <ol> <li> <p>arr: \u5f85\u5220\u9664\u6570\u636e\u7684\u6570\u7ec4</p> </li> <li> <p>obj: \u6307\u5b9a\u6cbfaxis\u8981\u5220\u9664\u7684\u7d22\u5f15</p> </li> <li> <p>axis: \u6307\u5b9a\u5220\u9664\u65f6\u6240\u6cbf\u7684\u8f74\u3002\u82e5axis\u4e3aNone\uff0c\u5219\u5c06\u6570\u7ec4\u6574\u4f53\u89c6\u4e3a\u4e00\u7ef4\u6570\u7ec4\uff0c\u8fd4\u56de\u7ed3\u679c\u4e5f\u4e3a\u4e00\u7ef4\u6570\u7ec4</p> </li> </ol> <pre><code>n0 = np.array([[1, 2, 3, 4], [5, 6, 7, 8], [11, 12, 13, 14], [15, 16, 17, 18]])\nprint(n0)\n\"\"\"\n[[ 1  2  3  4]\n [ 5  6  7  8]\n [11 12 13 14]\n [15 16 17 18]]\n\"\"\"\n\nn1 = np.delete(n0, 1, axis=0)    # \u5220\u9664\u7b2c2\u884c\nprint(n1)\n\"\"\"\n[[ 1  2  3  4]\n [11 12 13 14]\n [15 16 17 18]]\n\"\"\"\n\nn2 = np.delete(n0, 1, axis=1)    # \u5220\u9664\u7b2c2\u5217\nprint(n2)\n\"\"\"\n[[ 1  3  4]\n [ 5  7  8]\n [11 13 14]\n [15 17 18]]\n\"\"\"\n\nn3 = np.delete(n0, [0, 2], axis=1)    # \u5220\u9664\u7b2c1\u548c\u7b2c3\u5217\nprint(n3)\n\"\"\"\n[[ 2  4]\n [ 6  8]\n [12 14]\n [16 18]]\n\"\"\"\n\nn4 = np.delete(n0, [1, 3, 5, 7], axis=None)    # \u5220\u9664\u7b2c2\u30014\u30016\u30018\u4e2a\nprint(n4)\n\"\"\"\n[ 1  3  5  7 11 12 13 14 15 16 17 18]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_14","title":"\u6570\u7ec4\u4fee\u6539","text":"<p>\u76f4\u63a5\u7d22\u5f15\u6216\u5207\u7247\u540e\u8d4b\u503c\u5373\u53ef</p> <pre><code>n0 = np.arange(12).reshape(3, 4)\nprint(n0)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [ 8  9 10 11]]\n\"\"\"\n\nn0[2] = 20\nprint(n0)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5  6  7]\n [20 20 20 20]]\n\"\"\"\n\nn0[1, 2] = 60\nprint(n0)\n\"\"\"\n[[ 0  1  2  3]\n [ 4  5 60  7]\n [20 20 20 20]]\n\"\"\"\n\nn0[:2, 2:] = [[20, 30], [600, 70]]\nprint(n0)\n\"\"\"\n[[  0   1  20  30]\n [  4   5 600  70]\n [ 20  20  20  20]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_15","title":"\u6570\u7ec4\u67e5\u8be2","text":""},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#where","title":"where\u51fd\u6570","text":"<p><code>where(condition, x=None, y=None)</code></p> <ol> <li> <p>condition: \u6761\u4ef6\u3002\u5f53\u53ea\u6709\u8be5\u53c2\u6570\u65f6\uff0c\u7ed3\u679c\u8fd4\u56de\u6ee1\u8db3\u6761\u4ef6\u7684\u5143\u7d20\u6570\u7ec4\u5143\u7ec4</p> </li> <li> <p>x: \u5355\u4e00\u503c\u6216\u6570\u7ec4\u3002\u6761\u4ef6\u4e3aTrue\u7684\u503c\u7528x\u6216x\u4e2d\u5bf9\u5e94\u7684\u503c\u66ff\u6362\u3002\u9075\u5faa\u5e7f\u64ad\u673a\u5236</p> </li> <li> <p>y: \u5355\u4e00\u6570\u503c\u6216\u6570\u7ec4\u3002\u6761\u4ef6\u4e3aFalse\u7684\u503c\u7528y\u6216y\u4e2d\u5bf9\u5e94\u7684\u503c\u66ff\u6362\u3002\u9075\u5faa\u5e7f\u64ad\u673a\u5236</p> </li> </ol> <pre><code>n0 = np.arange(12)\nprint(n0)\n\"\"\"\n[ 0  1  2  3  4  5  6  7  8  9 10 11]\n\"\"\"\n\nn1 = np.where(n0 &gt;= 5)\nprint(n1)\n\"\"\"\n(array([ 5,  6,  7,  8,  9, 10, 11], dtype=int64),)\n\"\"\"\n\nn1 = np.where(n0 &gt;= 5, n0, n0+5)\nprint(n1)\n\"\"\"\n[ 5  6  7  8  9  5  6  7  8  9 10 11]\n\"\"\"\n\nn2 = np.where(n0 &gt;= 5, 1, 0)\nprint(n2)\n\"\"\"\n[0 0 0 0 0 1 1 1 1 1 1 1]\n\"\"\"\n\nn3 = np.array([[0], [1], [2]])\nprint(n3)\n\"\"\"\n[[0]\n [1]\n [2]]\n\"\"\"\n\nn4 = np.array([0, 1, 2, 3])\nprint(n4)\n\"\"\"\n[0 1 2 3]\n\"\"\"\n\nn5 = np.where(n3 &lt; n4, 2 * n3, 10 + n4)\nprint(n5)\n\"\"\"\n[[10  0  0  0]\n [10 11  2  2]\n [10 11 12  4]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_16","title":"\u5bf9\u89d2\u63d0\u53d6","text":"<p>\u81f3\u5c11\u662f\u4e8c\u7ef4\u6570\u7ec4</p> <p>\u4e8c\u7ef4\u6570\u7ec4\uff1a\u76f4\u63a5\u63d0\u53d6\u5bf9\u89d2\uff0c\u5373a[i, i+offset]\uff08\u6ce8\u610f\u8f74\u7684\u6539\u53d8\uff09</p> <p>\u591a\u7ef4\u6570\u7ec4\uff1a\u5148\u6839\u636eaxis1\u548caxis2\u63d0\u53d6\u51fa\u591a\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u518d\u63d0\u53d6\u6bcf\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u7684\u5bf9\u89d2</p>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#diagonal","title":"diagonal\u65b9\u6cd5","text":"<p><code>ndarray.diagonal(offset=0, axis1=0, axis2=1)</code></p> <ol> <li> <p>offset: \u76f8\u5bf9\u4e8e\u4e3b\u5bf9\u89d2\u7ebf\u7684\u504f\u79fb\u91cf\u6216\u8005\u5bf9\u89d2\u7ebf\u7d22\u5f15\u3002\u9ed8\u8ba4\u4e3a0\uff0c\u5373\u4e3b\u5bf9\u89d2\u7ebf\uff1b+\u8868\u793a\u4e0a\u65b9\u5bf9\u89d2\u7ebf\uff0c-\u8868\u793a\u4e0b\u65b9\u5bf9\u89d2\u7ebf</p> </li> <li> <p>axis1: \u4f5c\u4e3a\u63d0\u53d6\u51fa\u7684\u4e8c\u7ef4\u6570\u7ec4\u7684\u8f740</p> </li> <li> <p>axis2: \u4f5c\u4e3a\u63d0\u53d6\u51fa\u7684\u4e8c\u7ef4\u6570\u7ec4\u7684\u8f741</p> </li> </ol> <pre><code># \u4e8c\u7ef4\u6570\u7ec4\nn0 = np.random.randint(1, 10, size=(5, 9))\nprint(n0)\n\"\"\"\n[[3 4 9 9 5 7 9 3 4]\n [3 7 1 5 8 6 2 5 9]\n [8 2 5 3 8 1 7 6 7]\n [3 5 4 2 3 5 5 2 6]\n [5 8 1 4 6 7 1 5 1]]\n\"\"\"\n\nn1 = n0.diagonal()\nprint(n1)\n\"\"\"\n[3 7 5 2 6]\n\"\"\"\n\nn2 = n0.diagonal(offset=1)\nprint(n2)\n\"\"\"\n[4 1 3 3 7]\n\"\"\"\n\nn3 = n0.diagonal(offset=-1)\nprint(n3)\n\"\"\"\n[3 2 4 4]\n\"\"\"\n\nn4 = n0.diagonal(offset=1, axis1=0, axis2=1)\nprint(n4)\n\"\"\"\n[4 1 3 3 7]\n\"\"\"\n\nn5 = n0.diagonal(offset=1, axis1=1, axis2=0)\nprint(n5)\n\"\"\"\n[3 2 4 4]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn6 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n6)\n\"\"\"\n[[[4 9 6 8 8]\n  [4 6 3 4 4]\n  [6 8 4 2 7]\n  [3 3 6 8 5]]\n\n [[8 3 1 8 6]\n  [1 6 5 1 1]\n  [9 1 3 1 4]\n  [7 3 5 8 8]]\n\n [[1 1 4 1 7]\n  [2 1 6 3 6]\n  [4 5 6 9 9]\n  [1 5 5 7 4]]]\n\"\"\"\n\nn7 = n6.diagonal(axis1=2, axis2=1)\nprint(n7)\n\"\"\"\n[[4 6 4 8]\n [8 6 3 8]\n [1 1 6 7]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#diagonal_1","title":"diagonal\u51fd\u6570","text":"<p><code>diagonal(a, offset=0, axis1=0, axis2=1)</code></p> <ol> <li> <p>a: \u5f85\u63d0\u53d6\u7684\u6570\u7ec4\uff0c\u81f3\u5c11\u4e3a\u4e8c\u7ef4\u6570\u7ec4</p> </li> <li> <p>offset: \u540c\u4e0a</p> </li> <li> <p>axis1: \u540c\u4e0a</p> </li> <li> <p>axis2: \u540c\u4e0a</p> </li> </ol> <pre><code># \u4e8c\u7ef4\u6570\u7ec4\nn8 = np.random.randint(1, 10, size=(5, 9))\nprint(n8)\n\"\"\"\n[[7 4 3 7 1 2 3 1 4]\n [7 1 9 1 1 9 8 3 4]\n [3 8 4 8 2 8 3 4 4]\n [2 3 9 2 2 3 1 5 1]\n [5 5 2 2 7 4 9 7 3]]\n\"\"\"\n\nn9 = np.diagonal(n8)\nprint(n9)\n\"\"\"\n[7 1 4 2 7]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn10 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n10)\n\"\"\"\n[[[2 2 9 2 6]\n  [2 2 4 5 5]\n  [9 2 1 5 3]\n  [8 5 7 3 9]]\n\n [[3 4 4 1 4]\n  [4 9 5 9 7]\n  [5 8 6 4 1]\n  [9 6 6 3 2]]\n\n [[2 1 1 6 3]\n  [4 6 6 4 7]\n  [8 9 2 5 9]\n  [1 8 7 8 9]]]\n\"\"\"\n\nn11 = np.diagonal(n10, axis1=2, axis2=1)\nprint(n11)\n\"\"\"\n[[2 2 1 3]\n [3 9 6 3]\n [2 6 2 8]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#diag","title":"diag\u51fd\u6570","text":"<p>\u89c1\u6570\u7ec4\u7684\u5bf9\u89d2\u521b\u5efa</p>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_17","title":"\u5bf9\u89d2\u4fee\u6539","text":""},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#fill_diagonal","title":"fill_diagonal\u51fd\u6570","text":"<p>\u4e3b\u5bf9\u89d2\u7ebfa[i, i, ..., i]\u88ab\u4fee\u6539\u4e3aval\uff0c\u65e0\u8fd4\u56de\u503c\uff0c\u76f4\u63a5\u4fee\u6539\u539f\u6570\u7ec4</p> <p><code>fill_diagonal(a, val, wrap=False)</code></p> <ol> <li> <p>a: \u5f85\u4fee\u6539\u6570\u7ec4\uff0c\u81f3\u5c11\u662f\u4e8c\u7ef4\u6570\u7ec4\u3002\u5bf9\u4e8e\u591a\u7ef4\u6570\u7ec4\uff0c\u6bcf\u4e2a\u7ef4\u5ea6\u4e0a\u5927\u5c0f\u5fc5\u9700\u90fd\u76f8\u540c</p> </li> <li> <p>val: \u5982\u679cval\u662f\u5355\u4e00\u6570\u503c\uff0c\u8be5\u503c\u6cbf\u7740\u4e3b\u5bf9\u89d2\u7ebf\u91cd\u590d\u5199\u5165\uff1b\u5982\u679c\u4e3a\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u88ab\u8f6c\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4\u540e\u91cd\u590d\u5199\u5165\u4e3b\u5bf9\u89d2\u7ebf</p> </li> <li> <p>wrap: \u6ea2\u51fa\u662f\u5426\u6362\u884c\uff08\u4e00\u822c\u53ea\u6709\u9ad8\u7684\u4e8c\u7ef4\u6570\u7ec4\u4f1a\u6ea2\u51fa\uff09\u3002\u9ed8\u8ba4\u4e3aFalse</p> </li> </ol> <pre><code># \u4e8c\u7ef4\u6570\u7ec4\nn0 = np.zeros([10, 5])\nprint(n0)\n\"\"\"\n[[0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]\n\"\"\"\n\nnp.fill_diagonal(n0, 5)\nprint(n0)\n\"\"\"\n[[5. 0. 0. 0. 0.]\n [0. 5. 0. 0. 0.]\n [0. 0. 5. 0. 0.]\n [0. 0. 0. 5. 0.]\n [0. 0. 0. 0. 5.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]\n\"\"\"\n\nnp.fill_diagonal(n0, [1, 2, 3])\nprint(n0)\n\"\"\"\n[[1. 0. 0. 0. 0.]\n [0. 2. 0. 0. 0.]\n [0. 0. 3. 0. 0.]\n [0. 0. 0. 1. 0.]\n [0. 0. 0. 0. 2.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]\n\"\"\"\n\nnp.fill_diagonal(n0, [[5, 6], [7, 8]])\nprint(n0)\n\"\"\"\n[[5. 0. 0. 0. 0.]\n [0. 6. 0. 0. 0.]\n [0. 0. 7. 0. 0.]\n [0. 0. 0. 8. 0.]\n [0. 0. 0. 0. 5.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]\n [0. 0. 0. 0. 0.]]\n\"\"\"\n\nnp.fill_diagonal(n0, 5, wrap=True)\nprint(n0)\n\"\"\"\n[[5. 0. 0. 0. 0.]\n [0. 5. 0. 0. 0.]\n [0. 0. 5. 0. 0.]\n [0. 0. 0. 5. 0.]\n [0. 0. 0. 0. 5.]\n [0. 0. 0. 0. 0.]\n [5. 0. 0. 0. 0.]\n [0. 5. 0. 0. 0.]\n [0. 0. 5. 0. 0.]\n [0. 0. 0. 5. 0.]]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn1 = np.zeros([4, 4, 4])\nprint(n1)\n\"\"\"\n[[[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]]\n\"\"\"\n\nnp.fill_diagonal(n1, 5)\nprint(n1)\n\"\"\"\n[[[5. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 5. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 5. 0.]\n  [0. 0. 0. 0.]]\n\n [[0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 0.]\n  [0. 0. 0. 5.]]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_18","title":"\u5bf9\u89d2\u4e09\u89d2\u63d0\u53d6","text":"<p>\u4e00\u7ef4\u6570\u7ec4\uff1a\u5148\u6269\u5c55\u4e3a\u8f740\u548c\u8f741\u76f8\u540c\u5927\u5c0f\u7684\u4e8c\u7ef4\u6570\u7ec4\uff0c\u518d\u63d0\u53d6\u63d0\u53d6\u6307\u5b9a\u5bf9\u89d2\u7ebf\u4ee5\u4e0a\u6216\u4ee5\u4e0b\u90e8\u5206</p> <p>\u4e8c\u7ef4\u6570\u7ec4\uff1a\u63d0\u53d6\u6307\u5b9a\u5bf9\u89d2\u7ebf\u4ee5\u4e0a\u6216\u4ee5\u4e0b\u90e8\u5206\uff0c\u5176\u4f59\u90e8\u5206\u4e3a0</p> <p>\u591a\u7ef4\u6570\u7ec4\uff1a\u4ee5\u6700\u540e\u4e24\u4e2a\u8f74\u63d0\u53d6\u51fa\u591a\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u518d\u63d0\u53d6\u6bcf\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6307\u5b9a\u5bf9\u89d2\u7ebf\u4ee5\u4e0a\u6216\u4ee5\u4e0b\u90e8\u5206</p>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#trillower","title":"tril\u51fd\u6570\uff1a\u5bf9\u89d2\u7ebf\u4ee5\u4e0b(lower)","text":"<p><code>tril(m, k=0)</code></p> <ol> <li> <p>m: \u5f85\u63d0\u53d6\u6570\u7ec4</p> </li> <li> <p>k: \u540coffset</p> </li> </ol> <pre><code># \u4e00\u7ef4\u6570\u7ec4\nn0 = np.arange(1, 10)\nprint(n0)\n\"\"\"\n[1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn1 = np.tril(n0)\nprint(n1)\n\"\"\"\n[[1 0 0 0 0 0 0 0 0]\n [1 2 0 0 0 0 0 0 0]\n [1 2 3 0 0 0 0 0 0]\n [1 2 3 4 0 0 0 0 0]\n [1 2 3 4 5 0 0 0 0]\n [1 2 3 4 5 6 0 0 0]\n [1 2 3 4 5 6 7 0 0]\n [1 2 3 4 5 6 7 8 0]\n [1 2 3 4 5 6 7 8 9]]\n\"\"\"\n\n\n\n# \u4e8c\u7ef4\u6570\u7ec4\nn2 = np.random.randint(1, 10, size=(4, 5))\nprint(n2)\n\"\"\"\n[[4 3 2 9 1]\n [2 3 1 9 7]\n [8 9 3 4 1]\n [7 4 6 7 5]]\n\"\"\"\n\nn3 = np.tril(n2)\nprint(n3)\n\"\"\"\n[[4 0 0 0 0]\n [2 3 0 0 0]\n [8 9 3 0 0]\n [7 4 6 7 0]]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn4 = np.random.randint(1, 10, size=(4, 5, 6))\nprint(n4)\n\"\"\"\n[[[3 6 8 8 4 5]\n  [4 8 1 8 5 3]\n  [7 1 7 7 6 8]\n  [7 5 7 4 4 6]\n  [4 2 1 5 9 5]]\n\n [[5 8 6 1 1 5]\n  [7 5 1 7 4 5]\n  [4 9 2 9 1 3]\n  [9 4 3 5 4 5]\n  [7 3 7 2 6 4]]\n\n [[9 9 7 4 1 7]\n  [9 4 4 9 7 8]\n  [5 8 4 9 7 4]\n  [7 7 2 9 3 9]\n  [5 2 8 1 9 1]]\n\n [[6 7 8 8 7 7]\n  [9 9 5 1 5 3]\n  [7 3 3 9 8 1]\n  [7 3 1 2 4 9]\n  [7 1 9 9 7 8]]]\n\"\"\"\n\nn5 = np.tril(n4)\nprint(n5)\n\"\"\"\n[[[3 0 0 0 0 0]\n  [4 8 0 0 0 0]\n  [7 1 7 0 0 0]\n  [7 5 7 4 0 0]\n  [4 2 1 5 9 0]]\n\n [[5 0 0 0 0 0]\n  [7 5 0 0 0 0]\n  [4 9 2 0 0 0]\n  [9 4 3 5 0 0]\n  [7 3 7 2 6 0]]\n\n [[9 0 0 0 0 0]\n  [9 4 0 0 0 0]\n  [5 8 4 0 0 0]\n  [7 7 2 9 0 0]\n  [5 2 8 1 9 0]]\n\n [[6 0 0 0 0 0]\n  [9 9 0 0 0 0]\n  [7 3 3 0 0 0]\n  [7 3 1 2 0 0]\n  [7 1 9 9 7 0]]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#triuupper","title":"triu\u51fd\u6570\uff1a\u5bf9\u89d2\u7ebf\u4ee5\u4e0a(upper)","text":"<p><code>triu(m, k=0)</code></p> <ol> <li> <p>m: \u5f85\u63d0\u53d6\u6570\u7ec4</p> </li> <li> <p>k: \u540coffset</p> </li> </ol> <pre><code># \u4e00\u7ef4\u6570\u7ec4\nn5 = np.arange(1, 10)\nprint(n5)\n\"\"\"\n[1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn6 = np.triu(n5)\nprint(n6)\n\"\"\"\n[[1 2 3 4 5 6 7 8 9]\n [0 2 3 4 5 6 7 8 9]\n [0 0 3 4 5 6 7 8 9]\n [0 0 0 4 5 6 7 8 9]\n [0 0 0 0 5 6 7 8 9]\n [0 0 0 0 0 6 7 8 9]\n [0 0 0 0 0 0 7 8 9]\n [0 0 0 0 0 0 0 8 9]\n [0 0 0 0 0 0 0 0 9]]\n\"\"\"\n\n\n\n# \u4e8c\u7ef4\u6570\u7ec4\nn7 = np.random.randint(1, 10, size=(4, 5))\nprint(n7)\n\"\"\"\n[[3 9 7 8 5]\n [5 1 6 8 4]\n [1 6 8 8 1]\n [6 5 6 9 3]]\n\"\"\"\n\nn8 = np.triu(n7)\nprint(n8)\n\"\"\"\n[[3 9 7 8 5]\n [0 1 6 8 4]\n [0 0 8 8 1]\n [0 0 0 9 3]]\n\"\"\"\n\n\n\n# \u4e09\u7ef4\u6570\u7ec4\nn9 = np.random.randint(1, 10, size=(4, 5, 6))\nprint(n9)\n\"\"\"\n[[[3 7 9 2 5 3]\n  [6 5 3 1 7 7]\n  [2 1 8 8 8 1]\n  [3 1 6 6 5 4]\n  [6 4 3 8 2 9]]\n\n [[2 5 7 1 6 9]\n  [8 8 5 6 4 8]\n  [8 5 7 5 1 8]\n  [9 9 7 2 5 6]\n  [2 2 8 2 7 4]]\n\n [[7 9 1 4 8 3]\n  [2 1 9 6 5 6]\n  [8 5 8 2 9 7]\n  [5 1 5 6 6 8]\n  [5 5 7 3 5 2]]\n\n [[3 5 9 6 2 3]\n  [1 8 6 2 9 4]\n  [3 5 1 4 4 5]\n  [2 6 7 9 8 4]\n  [7 4 4 2 5 3]]]\n\"\"\"\n\nn10 = np.triu(n9)\nprint(n10)\n\"\"\"\n[[[3 7 9 2 5 3]\n  [0 5 3 1 7 7]\n  [0 0 8 8 8 1]\n  [0 0 0 6 5 4]\n  [0 0 0 0 2 9]]\n\n [[2 5 7 1 6 9]\n  [0 8 5 6 4 8]\n  [0 0 7 5 1 8]\n  [0 0 0 2 5 6]\n  [0 0 0 0 7 4]]\n\n [[7 9 1 4 8 3]\n  [0 1 9 6 5 6]\n  [0 0 8 2 9 7]\n  [0 0 0 6 6 8]\n  [0 0 0 0 5 2]]\n\n [[3 5 9 6 2 3]\n  [0 8 6 2 9 4]\n  [0 0 1 4 4 5]\n  [0 0 0 9 8 4]\n  [0 0 0 0 5 3]]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_19","title":"\u6570\u7ec4\u7ffb\u8f6c/\u65cb\u8f6c","text":""},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#flip","title":"flip\u51fd\u6570","text":"<p>\u9006\u8f6c\u6570\u7ec4\u6cbf\u7740\u6307\u5b9a\u8f74\u5143\u7d20\u7684\u987a\u5e8f\uff0c\u5373m[..., ::-1, ...]</p> <p><code>flip(m, axis=None)</code></p> <ol> <li> <p>m: \u5f85\u7ffb\u8f6c\u6570\u7ec4</p> </li> <li> <p>axis: \u6307\u5b9a\u8f74\uff0c\u53ef\u4ee5\u662f\u4e00\u6761\u8f74\u4e5f\u53ef\u4ee5\u662f\u591a\u6761\u8f74\u3002\u9ed8\u8ba4\u662fNone\uff0c\u5c06\u7ffb\u8f6c\u6570\u7ec4\u7684\u6240\u6709\u8f74</p> </li> </ol> <pre><code>n0 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n0)\n\"\"\"\n[[[1 7 8 7 7]\n  [6 2 8 8 3]\n  [8 1 1 5 1]\n  [1 8 4 8 9]]\n\n [[2 3 3 2 5]\n  [2 2 3 1 4]\n  [8 6 3 5 6]\n  [4 1 6 2 2]]\n\n [[8 2 1 4 2]\n  [4 1 7 8 2]\n  [9 5 2 7 3]\n  [1 8 4 5 1]]]\n\"\"\"\n\nn1 = np.flip(n0)\nprint(n1)\n\"\"\"\n[[[1 5 4 8 1]\n  [3 7 2 5 9]\n  [2 8 7 1 4]\n  [2 4 1 2 8]]\n\n [[2 2 6 1 4]\n  [6 5 3 6 8]\n  [4 1 3 2 2]\n  [5 2 3 3 2]]\n\n [[9 8 4 8 1]\n  [1 5 1 1 8]\n  [3 8 8 2 6]\n  [7 7 8 7 1]]]\n\"\"\"\n\nn2 = np.flip(n0, axis=0)\nprint(n2)\n\"\"\"\n[[[8 2 1 4 2]\n  [4 1 7 8 2]\n  [9 5 2 7 3]\n  [1 8 4 5 1]]\n\n [[2 3 3 2 5]\n  [2 2 3 1 4]\n  [8 6 3 5 6]\n  [4 1 6 2 2]]\n\n [[1 7 8 7 7]\n  [6 2 8 8 3]\n  [8 1 1 5 1]\n  [1 8 4 8 9]]]\n\"\"\"\n\nn3 = np.flip(n0, axis=1)\nprint(n3)\n\"\"\"\n[[[1 8 4 8 9]\n  [8 1 1 5 1]\n  [6 2 8 8 3]\n  [1 7 8 7 7]]\n\n [[4 1 6 2 2]\n  [8 6 3 5 6]\n  [2 2 3 1 4]\n  [2 3 3 2 5]]\n\n [[1 8 4 5 1]\n  [9 5 2 7 3]\n  [4 1 7 8 2]\n  [8 2 1 4 2]]]\n\"\"\"\n\nn4 = np.flip(n0, axis=2)\nprint(n4)\n\"\"\"\n[[[7 7 8 7 1]\n  [3 8 8 2 6]\n  [1 5 1 1 8]\n  [9 8 4 8 1]]\n\n [[5 2 3 3 2]\n  [4 1 3 2 2]\n  [6 5 3 6 8]\n  [2 2 6 1 4]]\n\n [[2 4 1 2 8]\n  [2 8 7 1 4]\n  [3 7 2 5 9]\n  [1 5 4 8 1]]]\n\"\"\"\n\nn5 = np.flip(n0, axis=(1, 2))\nprint(n5)\n\"\"\"\n[[[9 8 4 8 1]\n  [1 5 1 1 8]\n  [3 8 8 2 6]\n  [7 7 8 7 1]]\n\n [[2 2 6 1 4]\n  [6 5 3 6 8]\n  [4 1 3 2 2]\n  [5 2 3 3 2]]\n\n [[1 5 4 8 1]\n  [3 7 2 5 9]\n  [2 8 7 1 4]\n  [2 4 1 2 8]]]\n\"\"\"\n\nn6 = n0[:, ::-1, ::-1]    # \u4e0en5\u7b49\u4ef7\nprint(n6)\n\"\"\"\n[[[9 8 4 8 1]\n  [1 5 1 1 8]\n  [3 8 8 2 6]\n  [7 7 8 7 1]]\n\n [[2 2 6 1 4]\n  [6 5 3 6 8]\n  [4 1 3 2 2]\n  [5 2 3 3 2]]\n\n [[1 5 4 8 1]\n  [3 7 2 5 9]\n  [2 8 7 1 4]\n  [2 4 1 2 8]]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#fliplr","title":"fliplr\u51fd\u6570","text":"<p>\u5c06\u6570\u7ec4\uff08\u81f3\u5c11\u662f\u4e8c\u7ef4\u6570\u7ec4\uff09\u6cbf\u8f741\uff08\u4e8c\u7ef4\uff1aleft/right\uff09\u7ffb\u8f6c</p> <p><code>fliplr(m)</code></p> <p>&lt;=&gt;<code>flip(m, axis=1)</code></p> <p>&lt;=&gt;<code>m[:, ::-1]</code></p> <pre><code>n0 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n0)\n\"\"\"\n[[[1 4 5 2 3]\n  [7 3 7 8 9]\n  [2 1 6 3 7]\n  [9 6 3 1 1]]\n\n [[7 9 2 4 7]\n  [3 5 9 3 8]\n  [9 9 6 5 2]\n  [8 9 1 8 2]]\n\n [[9 9 1 7 6]\n  [7 1 2 8 5]\n  [8 1 2 2 4]\n  [4 5 6 2 4]]]\n\"\"\"\n\nn7 = np.fliplr(n0)\nprint(n7)\n\"\"\"\n[[[9 6 3 1 1]\n  [2 1 6 3 7]\n  [7 3 7 8 9]\n  [1 4 5 2 3]]\n\n [[8 9 1 8 2]\n  [9 9 6 5 2]\n  [3 5 9 3 8]\n  [7 9 2 4 7]]\n\n [[4 5 6 2 4]\n  [8 1 2 2 4]\n  [7 1 2 8 5]\n  [9 9 1 7 6]]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#flipud","title":"flipud\u51fd\u6570","text":"<p>\u5c06\u6570\u7ec4\uff08\u81f3\u5c11\u662f\u4e00\u7ef4\u6570\u7ec4\uff09\u6cbf\u8f740\uff08\u4e8c\u7ef4\uff1aup/down\uff09\u7ffb\u8f6c</p> <p><code>flipud(m)</code></p> <p>&lt;=&gt;<code>flip(m, axis=0)</code></p> <p>&lt;=&gt;<code>m[::-1, ...]</code></p> <pre><code>n0 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n0)\n\"\"\"\n[[[4 5 1 2 6]\n  [8 7 4 8 9]\n  [9 9 2 8 2]\n  [5 3 7 9 8]]\n\n [[3 8 5 3 2]\n  [4 2 3 2 3]\n  [2 5 7 3 6]\n  [8 3 9 9 3]]\n\n [[9 2 7 7 2]\n  [8 3 6 6 2]\n  [1 8 6 1 1]\n  [3 9 5 2 6]]]\n\"\"\"\n\nn8 = np.flipud(n0)\nprint(n8)\n\"\"\"\n[[[9 2 7 7 2]\n  [8 3 6 6 2]\n  [1 8 6 1 1]\n  [3 9 5 2 6]]\n\n [[3 8 5 3 2]\n  [4 2 3 2 3]\n  [2 5 7 3 6]\n  [8 3 9 9 3]]\n\n [[4 5 1 2 6]\n  [8 7 4 8 9]\n  [9 9 2 8 2]\n  [5 3 7 9 8]]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#rot90","title":"rot90\u51fd\u6570","text":"<p>\u5c06\u6570\u7ec4\uff08\u81f3\u5c11\u662f\u4e8c\u7ef4\u6570\u7ec4\uff09\u4ece\u7b2c\u4e00\u4e2a\u8f74\u5411\u7b2c\u4e8c\u4e2a\u8f74\u65cb\u8f6ck\u4e2a90\u00b0\u3002\u591a\u7ef4\u6570\u7ec4\u5373\u5c06\u591a\u7ef4\u6570\u7ec4\u4e2d\u6709\u6307\u5b9a\u4e24\u4e2a\u8f74\u7684\u4e8c\u7ef4\u6570\u7ec4\u8fdb\u884c\u65cb\u8f6c</p> <p><code>rot90(m, k=1, axes=(0, 1))</code></p> <ol> <li> <p>m: \u5f85\u65cb\u8f6c\u6570\u7ec4</p> </li> <li> <p>k: \u65cb\u8f6c\u6b21\u6570</p> </li> <li> <p>axes: \u8f74\u5e8f\u5217\u3002\u5fc5\u987b\u4e14\u53ea\u80fd\u662f\u6307\u5b9a\u4e24\u4e2a\u8f74\uff0c\u5e76\u4e14\u4e24\u4e2a\u8f74\u5fc5\u987b\u4e0d\u540c\u3002</p> </li> </ol> <p></p> <pre><code>n0 = np.random.randint(1, 10, size=(3, 4))\nprint(n0)\n\"\"\"\n[[7 6 1 6]\n [2 7 9 5]\n [2 8 7 4]]\n\"\"\"\n\nn9 = np.rot90(n0)\nprint(n9)\n\"\"\"\n[[6 5 4]\n [1 9 7]\n [6 7 8]\n [7 2 2]]\n\"\"\"\n\nn10 = np.rot90(n0, k=2)\nprint(n10)\n\"\"\"\n[[4 7 8 2]\n [5 9 7 2]\n [6 1 6 7]]\n\"\"\"\n\nn11 = np.rot90(n0, axes=(1, 0))\nprint(n11)\n\"\"\"\n[[2 2 7]\n [8 7 6]\n [7 9 1]\n [4 5 6]]\n\"\"\"\n\nn12 = np.random.randint(1, 10, size=(3, 4, 5))\nprint(n12)\n\"\"\"\n[[[4 9 8 3 8]\n  [6 2 3 8 1]\n  [7 9 5 3 8]\n  [1 5 6 5 7]]\n\n [[8 5 1 7 4]\n  [5 3 4 4 1]\n  [4 6 3 2 1]\n  [5 3 8 8 7]]\n\n [[1 8 2 2 3]\n  [9 1 9 2 4]\n  [2 1 3 9 5]\n  [3 5 5 8 5]]]\n\"\"\"\n\nn13 = np.rot90(n12, axes=(1, 2))\nprint(n13)\n\"\"\"\n[[[8 1 8 7]\n  [3 8 3 5]\n  [8 3 5 6]\n  [9 2 9 5]\n  [4 6 7 1]]\n\n [[4 1 1 7]\n  [7 4 2 8]\n  [1 4 3 8]\n  [5 3 6 3]\n  [8 5 4 5]]\n\n [[3 4 5 5]\n  [2 2 9 8]\n  [2 9 3 5]\n  [8 1 1 5]\n  [1 9 2 3]]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_20","title":"\u6570\u7ec4\u6392\u5e8f","text":""},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#sort","title":"sort\u65b9\u6cd5\u3001\u51fd\u6570","text":"<p><code>ndarray.sort(axis=-1, kind=None, order=None)</code> <code>sort(a, axis=-1, kind=None, order=None)</code> sort\u65b9\u6cd5\u5bf9\u539f\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u800csort\u51fd\u6570\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u526f\u672c</p> <ol> <li> <p>a: \u5f85\u6392\u5e8f\u7684\u6570\u7ec4</p> </li> <li> <p>axis: \u6392\u5e8f\u6307\u5b9a\u7684\u8f74\u3002\u9ed8\u8ba4\u4e3a-1\uff0c\u5373\u5bf9\u6700\u540e\u4e00\u4e2a\u8f74\u8fdb\u884c\u6392\u5e8f\u3002\u82e5\u4e3aNone\uff0c\u5219\u5c06\u6570\u7ec4\u89c6\u4e3a\u4e00\u7ef4\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f</p> </li> <li> <p>kind: \u6392\u5e8f\u7b97\u6cd5\u3002\u53ef\u9009'quicksort'\uff08\u9ed8\u8ba4\uff09\u3001'mergesort'\u3001 'heapsort'\u3001 'stable'</p> </li> <li> <p>order: \u6307\u5b9a\u6392\u5e8f\u7684\u5b57\u6bb5\u3002\u9002\u7528\u4e8e\u7ed3\u6784\u5316\u6570\u7ec4\u3002\u5f53\u6307\u5b9a\u591a\u4e2a\u5b57\u6bb5\u65f6\uff0c\u82e5\u524d\u4e00\u4e2a\u5b57\u6bb5\u6392\u5e8f\u65f6\u76f8\u540c\uff0c\u518d\u6839\u636e\u540e\u4e00\u4e2a\u5b57\u6bb5\u8fdb\u884c\u6392\u5e8f</p> </li> </ol> <pre><code>n0 = np.random.randint(1, 17, size=(2, 2, 4))\nprint(n0)\n\"\"\"\n[[[16  3  2 11]\n  [16  3  8 11]]\n\n [[ 5  5  2 11]\n  [14  8  8  9]]]\n\"\"\"\n\nn0.sort()\nprint(n0)\n\"\"\"\n[[[ 2  3 11 16]\n  [ 3  8 11 16]]\n\n [[ 2  5  5 11]\n  [ 8  8  9 14]]]\n\"\"\"\n\nn0 = np.random.randint(1, 17, size=(2, 2, 4))\nprint(n0)\n\"\"\"\n[[[ 1  7  4 11]\n  [ 8 12  5 11]]\n\n [[11  8  4 11]\n  [ 9 12  5 13]]]\n\"\"\"\n\nn2 = np.sort(n0)\nprint(n2)\n\"\"\"\n[[[ 1  4  7 11]\n  [ 5  8 11 12]]\n\n [[ 4  8 11 11]\n  [ 5  9 12 13]]]\n\"\"\"\n\nn3 = np.sort(n0, axis=0)\nprint(n3)\n\"\"\"\n[[[ 1  7  4 11]\n  [ 8 12  5 11]]\n\n [[11  8  4 11]\n  [ 9 12  5 13]]]\n\"\"\"\n\nn4 = np.sort(n0, axis=1)\nprint(n4)\n\"\"\"\n[[[ 1  7  4 11]\n  [ 8 12  5 11]]\n\n [[ 9  8  4 11]\n  [11 12  5 13]]]\n\"\"\"\n\nn5 = np.sort(n0, axis=2)\nprint(n5)\n\"\"\"\n[[[ 1  4  7 11]\n  [ 5  8 11 12]]\n\n [[ 4  8 11 11]\n  [ 5  9 12 13]]]\n\"\"\"\n\nn6 = np.sort(n0, axis=None)\nprint(n6)\n\"\"\"\n[ 1  4  4  5  5  7  8  8  9 11 11 11 11 12 12 13]\n\"\"\"\n\n\n\ndtype = [('name', 'S10'), ('height', float), ('age', int)]\nvalues = [('Arthur', 1.8, 41), ('Lancelot', 1.9, 38), ('Galahad', 1.7, 38)]\nn7 = np.array(values, dtype=dtype)\nprint(n7)\n\"\"\"\n[(b'Arthur', 1.8, 41) (b'Lancelot', 1.9, 38) (b'Galahad', 1.7, 38)]\n\"\"\"\n\nprint(np.sort(n7, order='height'))\n\"\"\"\n[(b'Galahad', 1.7, 38) (b'Arthur', 1.8, 41) (b'Lancelot', 1.9, 38)]\n\"\"\"\n\nprint(np.sort(n7, order=['age', 'height']))\n\"\"\"\n[(b'Galahad', 1.7, 38) (b'Lancelot', 1.9, 38) (b'Arthur', 1.8, 41)]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#argsort","title":"argsort\u65b9\u6cd5\u3001\u51fd\u6570","text":"<p>\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u5404\u5143\u7d20\u5728\u539f\u6570\u7ec4\u4e2d\u6cbf\u6307\u5b9a\u8f74\u7684\u4f4d\u7f6e\uff0c\u4f46\u5b9e\u9645\u5e76\u4e0d\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f</p> <p><code>ndarray.argsort(axis=-1, kind=None, order=None)</code> <code>argsort(a, axis=-1, kind=None, order=None)</code></p> <ol> <li> <p>a: \u540c\u4e0a</p> </li> <li> <p>axis: \u540c\u4e0a</p> </li> <li> <p>kind: \u540c\u4e0a</p> </li> <li> <p>order: \u540c\u4e0a</p> </li> </ol> <pre><code>n0 = np.random.randint(1, 17, size=(2, 2, 4))\nprint(n0)\n\"\"\"\n[[[ 6  5  6  7]\n  [16 10  9  1]]\n\n [[ 1 11  9  9]\n  [12  3  8  6]]]\n\"\"\"\n\nn1 = n0.argsort()\nprint(n1)\n\"\"\"\n[[[1 0 2 3]\n  [3 2 1 0]]\n\n [[0 2 3 1]\n  [1 3 2 0]]]\n\"\"\"\n\nn2 = np.argsort(n0)\nprint(n2)\n\"\"\"\n[[[1 0 2 3]\n  [3 2 1 0]]\n\n [[0 2 3 1]\n  [1 3 2 0]]]\n\"\"\"\n\nn3 = np.argsort(n0, axis=0)\nprint(n3)\n\"\"\"\n[[[1 0 0 0]\n  [1 1 1 0]]\n\n [[0 1 1 1]\n  [0 0 0 1]]]\n\"\"\"\n\nn4 = np.argsort(n0, axis=1)\nprint(n4)\n\"\"\"\n[[[0 0 0 1]\n  [1 1 1 0]]\n\n [[0 1 1 1]\n  [1 0 0 0]]]\n\"\"\"\n\nn5 = np.argsort(n0, axis=2)\nprint(n5)\n\"\"\"\n[[[1 0 2 3]\n  [3 2 1 0]]\n\n [[0 2 3 1]\n  [1 3 2 0]]]\n\"\"\"\n\nn6 = np.argsort(n0, axis=None)\nprint(n6)\n\"\"\"\n[ 7  8 13  1  0  2 15  3 14  6 10 11  5  9 12  4]\n\"\"\"\n\ndtype = [('name', 'S10'), ('height', float), ('age', int)]\nvalues = [('Arthur', 1.8, 41), ('Lancelot', 1.9, 38), ('Galahad', 1.7, 38)]\nn7 = np.array(values, dtype=dtype)\nprint(n7)\n\"\"\"\n[(b'Arthur', 1.8, 41) (b'Lancelot', 1.9, 38) (b'Galahad', 1.7, 38)]\n\"\"\"\n\nprint(np.argsort(n7, order='height'))\n\"\"\"\n[2 0 1]\n\"\"\"\n\nprint(np.argsort(n7, order=['age', 'height']))\n\"\"\"\n[2 1 0]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#lexsort","title":"lexsort\u51fd\u6570","text":"<p><code>lexsort(keys, axis=-1)</code> \u82e5\u4e3a\u591a\u4e2a\u4e00\u7ef4\u6570\u7ec4\uff0c\u5148\u6839\u636e\u6700\u540e\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u5f53\u51fa\u73b0\u76f8\u540c\u65f6\u6839\u636e\u524d\u4e00\u4e2a\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u7d22\u5f15 \u82e5\u4e3a\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5148\u6839\u636e\u6700\u540e\u4e00\u884c\u6392\u5e8f\uff0c\u5f53\u51fa\u73b0\u76f8\u540c\u65f6\u6839\u636e\u4e0a\u4e00\u884c\u8fdb\u884c\u6392\u5e8f\uff0c\u4ee5\u6b64\u7c7b\u63a8\uff0c\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u7d22\u5f15 \u82e5\u4e3a\u591a\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u5219\u6bcf\u6b21\u6839\u636eaxis\u4ece\u6bcf\u4e2a\u6570\u7ec4\u4e2d\u53d6\u51fa\u4e00\u4e2a\u4e00\u7ef4\u6570\u7ec4\u540e\uff0c\u5f7c\u6b64\u4e4b\u95f4\u8fdb\u884c\u6392\u5e8f\uff0c\u8fd4\u56de\u6392\u5e8f\u540e\u7684\u7d22\u5f15\u7ec4\u5408</p> <ol> <li> <p>keys: \u6392\u5e8f\u6570\u7ec4\u3002\u82e5\u6709\u591a\u4e2a\u6570\u7ec4\uff0c\u5219\u6bcf\u4e2a\u6570\u7ec4\u5fc5\u987b\u662f\u76f8\u540c\u5f62\u72b6\u3002\u9ed8\u8ba4\u6700\u540e\u4e00\u4e2a\u6570\u7ec4\u4f5c\u4e3a\u521d\u59cb\u6392\u5e8f\u6570\u7ec4\u3002</p> </li> <li> <p>aixs: \u82e5\u4e3a\u591a\u4e2a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u53d6\u51fa\u4e00\u7ef4\u6570\u7ec4\u6240\u6cbf\u7684\u8f74\u3002\u9ed8\u8ba4\u4e3a-1\uff0c\u5373\u4f7f\u7528\u6700\u540e\u4e00\u4e2a\u8f74\uff081\uff09</p> </li> </ol> <pre><code>n0 = np.random.randint(1, 17, size=6)\nprint(n0)\n\"\"\"\n[ 3 15 13 16  9 13]\n\"\"\"\n\nn1 = np.random.randint(1, 17, size=6)\nprint(n1)\n\"\"\"\n[ 4 13  7 16 15  1]\n\"\"\"\n\nn2 = np.random.randint(1, 17, size=6)\nprint(n2)\n\"\"\"\n[15 12  5 13  7  7]\n\"\"\"\n\nn3 = np.lexsort((n0, n1, n2))\nprint(n3)\n\"\"\"\n[2 5 4 1 3 0]\n\"\"\"\n\nn4 = np.random.randint(1, 17, size=(4, 4))\nprint(n4)\n\"\"\"\n[[ 7  4 10 12]\n [15 12 12  8]\n [ 8  9 14  3]\n [ 5  2 16  1]]\n\"\"\"\n\nn5 = np.lexsort(n4)\nprint(n5)\n\"\"\"\n[3 1 0 2]\n\"\"\"\n\nn6 = np.random.randint(1, 17, size=(3, 4))\n\"\"\"\n[[16  2  9  5]\n [ 3  2  6  8]\n [ 1 12 11 14]]\n\"\"\"\n\nn7 = np.random.randint(1, 17, size=(3, 4))\n\"\"\"\n[[10  7 16 12]\n [ 7  1  5 11]\n [ 9  7  9 16]]\n\"\"\"\n\nn8 = np.lexsort((n6, n7), axis=1)\n\"\"\"\n[[1 0 3 2]\n [1 2 0 3]\n [1 0 2 3]]\n\"\"\"\n\nn9 = np.lexsort((n6, n7), axis=0)\n\"\"\"\n[[1 1 1 1]\n [2 0 2 0]\n [0 2 0 2]]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#_21","title":"\u6570\u7ec4\u4e00\u7ef4\u5316","text":""},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#flatten","title":"flatten\u65b9\u6cd5","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u8fde\u7eed\u7684\u4e00\u7ef4\uff08\u6241\u5e73\uff09\u6570\u7ec4</p> <p><code>ndarray.flatten(order=\"C\")</code></p> <pre><code>n0 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n\"\"\"\n[[1 2 3]\n [4 5 6]\n [7 8 9]]\n\"\"\"\n\nn1 = n0.flatten(order=\"C\")\n\"\"\"\n[1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn2 = n0.flatten(order=\"F\")\n\"\"\"\n[1 4 7 2 5 8 3 6 9]\n\"\"\"\n</code></pre>"},{"location":"numpy/2.%2B%E6%95%B0%E7%BB%84%E7%9A%84%E6%93%8D%E4%BD%9C%2Bb1e5aded-809e-4f5e-8eeb-bf5278c70410/#ravel","title":"ravel\u65b9\u6cd5\u3001\u51fd\u6570","text":"<p>\u8fd4\u56de\u4e00\u4e2a\u8fde\u7eed\u7684\u4e00\u7ef4\uff08\u6241\u5e73\uff09\u6570\u7ec4</p> <p><code>ndarray.ravel(order=\"C\")</code></p> <p><code>ravel(a, order='C')</code></p> <ol> <li> <p>a\uff1a\u540c\u4e0a</p> </li> <li> <p>order\uff1a\u540c\u524d</p> </li> </ol> <pre><code>n0 = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])\n\"\"\"\n[[1 2 3]\n [4 5 6]\n [7 8 9]]\n\"\"\"\n\nn1 = np.ravel(n0, order='C')\nn2 = n0.ravel(order='C')\n\"\"\"\n[1 2 3 4 5 6 7 8 9]\n\"\"\"\n\nn3 = np.ravel(n0, order='F')\nn4 = n0.ravel(order='F')\n\"\"\"\n[1 4 7 2 5 8 3 6 9]\n\"\"\"\n</code></pre>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/","title":"01.AnData\u6570\u636e\u7ed3\u6784","text":""},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#_1","title":"\u5bfc\u5165\u6a21\u5757","text":"<pre><code>import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nimport pooch\nimport anndata\nimport scanpy as sc\n</code></pre>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#_2","title":"\u6570\u636e\u4e0b\u8f7d\u4e0e\u5bfc\u5165","text":"<p>\u4e0b\u8f7d\u5e76\u5bfc\u5165.h5ad\u6587\u4ef6\uff1a\u5df2\u7ecf\u9884\u5904\u7406\u7684 PBMC \u6570\u636e\u96c6</p> <p>scverse-getting-started-anndata-pbmc3k_processed.h5ad</p> <pre><code>datapath = \"./data/scverse-getting-started-anndata-pbmc3k_processed.h5ad\"\nadata = anndata.read_h5ad(datapath)\n\"\"\"\nAnnData object with n_obs \u00d7 n_vars = 2638 \u00d7 11505\n    obs: 'n_genes', 'percent_mito', 'n_counts', 'louvain_cell_types'\n    var: 'gene_names', 'n_cells', 'gene_ids'\n    uns: 'louvain', 'louvain_colors', 'pca'\n    obsm: 'X_pca', 'X_tsne', 'X_umap'\n    layers: 'raw'\n    obsp: 'distances_all'\n\"\"\"\n\nadata_df = adata.to_df()\n\"\"\"\ngene_names        LINC00115  NOC2L  KLHL17  PLEKHN1  HES4     ISG15  AGRN  ...    MT-CO3    MT-ND3   MT-ND4L    MT-ND4    MT-ND5  MT-ND6    MT-CYB\ncell_barcode                                                               ...                                                                    \nAAACATACAACCAC-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  1.718197  0.649662  0.000000  2.317369  0.649662     0.0  1.538924\nAAACATTGAGCTAC-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  2.049184  0.642665  0.000000  2.764773  0.372095     0.0  1.527396\nAAACATTGATCAGC-1        0.0    0.0     0.0      0.0   0.0  0.532456   0.0  ...  1.338269  0.000000  0.000000  1.134407  0.878057     0.0  1.338269\nAAACCGTGCTTCCG-1        0.0    0.0     0.0      0.0   0.0  2.144639   0.0  ...  1.470325  0.000000  0.608494  1.256467  0.984071     0.0  0.984071\nAAACCGTGTATGCG-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  1.179840  0.000000  0.000000  0.000000  1.706149     0.0  1.179840\n...                     ...    ...     ...      ...   ...       ...   ...  ...       ...       ...       ...       ...       ...     ...       ...\nTTTCGAACTCTCAT-1        0.0    0.0     0.0      0.0   0.0  2.298200   0.0  ...  1.811211  0.494533  0.000000  0.494533  0.000000     0.0  0.494533\nTTTCTACTGAGGCA-1        0.0    0.0     0.0      0.0   0.0  0.496017   0.0  ...  1.703869  0.000000  0.496017  0.826074  0.496017     0.0  1.272192\nTTTCTACTTCCTCG-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  2.320006  0.000000  0.000000  2.320006  0.000000     0.0  1.831505\nTTTGCATGAGAGGC-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  1.670896  0.000000  1.150086  0.000000  0.000000     0.0  1.150086\nTTTGCATGCCTCAC-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  0.750617  0.000000  0.000000  0.750617  0.000000     0.0  1.471306\n\n[2638 rows x 11505 columns]\n\"\"\"\n\nadata_shape = adata.shape\n\"\"\"\n(2638, 11505)\n\"\"\"\n\nadata_nobs = adata.n_obs              # \u7ec6\u80de\u6570\u91cf\n\"\"\"\n2638\n\"\"\"\n\nadata_obs_names = adata.obs_names     # \u7ec6\u80de\u6761\u7801\n\"\"\"\nIndex(['AAACATACAACCAC-1', 'AAACATTGAGCTAC-1', 'AAACATTGATCAGC-1',\n       'AAACCGTGCTTCCG-1', 'AAACCGTGTATGCG-1', 'AAACGCACTGGTAC-1',\n       'AAACGCTGACCAGT-1', 'AAACGCTGGTTCTT-1', 'AAACGCTGTAGCCA-1',\n       'AAACGCTGTTTCTG-1',\n       ...\n       'TTTCAGTGTCACGA-1', 'TTTCAGTGTCTATC-1', 'TTTCAGTGTGCAGT-1',\n       'TTTCCAGAGGTGAG-1', 'TTTCGAACACCTGA-1', 'TTTCGAACTCTCAT-1',\n       'TTTCTACTGAGGCA-1', 'TTTCTACTTCCTCG-1', 'TTTGCATGAGAGGC-1',\n       'TTTGCATGCCTCAC-1'],\n      dtype='object', name='cell_barcode', length=2638)\n\"\"\"\n\nadata_obs_colums = adata.obs_keys()   # \u7ec6\u80de\u4fe1\u606f\u5217\u540d\n\"\"\"\n['n_genes', 'percent_mito', 'n_counts', 'louvain_cell_types']\n\"\"\"\n\nadata_nvars = adata.n_vars            # \u57fa\u56e0\u6570\u91cf\n\"\"\"\n11505\n\"\"\"\n\nadata_var_names = adata.var_names     # \u57fa\u56e0\u540d\u79f0\n\"\"\"\nIndex(['LINC00115', 'NOC2L', 'KLHL17', 'PLEKHN1', 'HES4', 'ISG15', 'AGRN',\n       'C1orf159', 'TNFRSF18', 'TNFRSF4',\n       ...\n       'MT-CO2', 'MT-ATP8', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',\n       'MT-ND5', 'MT-ND6', 'MT-CYB'],\n      dtype='object', name='gene_names', length=11505)\n\"\"\"\n\nadata_var_colums = adata.var_keys()   # \u57fa\u56e0\u4fe1\u606f\u5217\u540d\n\"\"\"\n['gene_names', 'n_cells', 'gene_ids']\n\"\"\"\n</code></pre> <pre><code>adata1 = adata[0:100, [\"MT-CO3\", \"MT-CYB\"]]    # \u7d22\u5f15\u7c7b\u4f3c\u4e8epandas\n\"\"\"\nView of AnnData object with n_obs \u00d7 n_vars = 100 \u00d7 2\n    obs: 'n_genes', 'percent_mito', 'n_counts', 'louvain_cell_types'\n    var: 'gene_names', 'n_cells', 'gene_ids'\n    uns: 'louvain', 'louvain_colors', 'pca'\n    obsm: 'X_pca', 'X_tsne', 'X_umap'\n    layers: 'raw'\n    obsp: 'distances_all'\n\"\"\"\n\nadata1_df = adata1.to_df()\n\"\"\"\ngene_names          MT-CO3    MT-CYB\ncell_barcode\nAAACATACAACCAC-1  1.718197  1.538924\nAAACATTGAGCTAC-1  2.049184  1.527396\nAAACATTGATCAGC-1  1.338269  1.338269\nAAACCGTGCTTCCG-1  1.470325  0.984071\nAAACCGTGTATGCG-1  1.179840  1.179840\n...                    ...       ...\nAAGATGGAGATAAG-1  1.872285  1.322174\nAAGATTACAACCTG-1  2.236686  1.419691\nAAGATTACAGATCC-1  1.574272  1.778458\nAAGATTACCCGTTC-1  2.005355  2.005355\nAAGATTACCGCCTT-1  2.014749  2.106685\n\n[100 rows x 2 columns]\n\"\"\"\n</code></pre>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#_3","title":"\u6570\u636e\u7ed3\u6784","text":""},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#observations-variablesx","title":"\u6d3b\u52a8\u8ba1\u6570\u77e9\u9635(observations \u00d7 variables)\uff1aX","text":"<p>\u50a8\u5b58\u4e3a\u7a00\u758f\u77e9\u9635\uff08\u53ea\u5c06\u975e\u96f6\u503c\u53ca\u5176\u5750\u6807/\u7d22\u5f15\u663e\u5f0f\u5b58\u50a8\u5728\u6570\u636e\u77e9\u9635\u4e2d\uff09</p> <pre><code>\"\"\"\n\u50a8\u5b58\u5f52\u4e00\u5316\u548clog(1+x)\u8f6c\u6362\u7684 mRNA \u8ba1\u6570\n\"\"\"\n\nX = adata.X                                                                         # \u7a00\u758f\u77e9\u9635\n\"\"\"\n&lt;Compressed Sparse Row sparse matrix of dtype 'float32'\n        with 2076576 stored elements and shape (2638, 11505)&gt;\n  Coords        Values\n  (0, 19)       0.6496620774269104\n  (0, 52)       0.6496620774269104\n  (0, 58)       1.0402015447616577\n  (0, 118)      0.6496620774269104\n  (0, 131)      0.6496620774269104\n  ...\n  (2637, 11493) 0.7506172060966492\n  (2637, 11494) 2.177945375442505\n  (2637, 11498) 0.7506172060966492\n  (2637, 11501) 0.7506172060966492\n  (2637, 11504) 1.4713064432144165\n\"\"\"\n\nX_df = pd.DataFrame(X.todense(), index=adata.obs_names, columns=adata.var_names)    # \u666e\u901a\u77e9\u9635\nX_df = pd.DataFrame(X.toarray(), index=adata.obs_names, columns=adata.var_names)\nX_df = adata.to_df()\n\"\"\"\ngene_names        LINC00115  NOC2L  KLHL17  PLEKHN1  HES4     ISG15  AGRN  ...    MT-CO3    MT-ND3   MT-ND4L    MT-ND4    MT-ND5  MT-ND6    MT-CYB\ncell_barcode                                                               ...                                                                    \nAAACATACAACCAC-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  1.718197  0.649662  0.000000  2.317369  0.649662     0.0  1.538924\nAAACATTGAGCTAC-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  2.049184  0.642665  0.000000  2.764773  0.372095     0.0  1.527396\nAAACATTGATCAGC-1        0.0    0.0     0.0      0.0   0.0  0.532456   0.0  ...  1.338269  0.000000  0.000000  1.134407  0.878057     0.0  1.338269\nAAACCGTGCTTCCG-1        0.0    0.0     0.0      0.0   0.0  2.144639   0.0  ...  1.470325  0.000000  0.608494  1.256467  0.984071     0.0  0.984071\nAAACCGTGTATGCG-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  1.179840  0.000000  0.000000  0.000000  1.706149     0.0  1.179840\n...                     ...    ...     ...      ...   ...       ...   ...  ...       ...       ...       ...       ...       ...     ...       ...\nTTTCGAACTCTCAT-1        0.0    0.0     0.0      0.0   0.0  2.298200   0.0  ...  1.811211  0.494533  0.000000  0.494533  0.000000     0.0  0.494533\nTTTCTACTGAGGCA-1        0.0    0.0     0.0      0.0   0.0  0.496017   0.0  ...  1.703869  0.000000  0.496017  0.826074  0.496017     0.0  1.272192\nTTTCTACTTCCTCG-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  2.320006  0.000000  0.000000  2.320006  0.000000     0.0  1.831505    \nTTTGCATGAGAGGC-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  1.670896  0.000000  1.150086  0.000000  0.000000     0.0  1.150086    \nTTTGCATGCCTCAC-1        0.0    0.0     0.0      0.0   0.0  0.000000   0.0  ...  0.750617  0.000000  0.000000  0.750617  0.000000     0.0  1.471306    \n\n[2638 rows x 11505 columns]\n\"\"\"\n\nX_data = X.data\n\"\"\"\n[0.6496621 0.6496621 1.0402015 ... 0.7506172 0.7506172 1.4713064]\n\"\"\"\n\nX_indices = X.indices\n\"\"\"\n[   19    52    58 ... 11498 11501 11504]\n\"\"\"\n\nX_nonzero = X.nnz\n\"\"\"\n2076576\n\"\"\"\n\nX_shape = X.shape\n\"\"\"\n(2638, 11505)\n\"\"\"\n</code></pre>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#xobservations-variableslayers","title":"X\u66ff\u4ee3\u7248\u672c(observations \u00d7 variables)\uff1alayers","text":"<pre><code>layers = adata.layers\n\"\"\"\nLayers with keys: raw\n\"\"\"\n</code></pre> <pre><code>\"\"\"\n\u539f\u59cb\u6570\u636e\u4e3a\u6bcf\u4e2a\u7ec6\u80de\u4e2d\u6bcf\u4e2a\u57fa\u56e0\u7684\u8868\u8fbe\u91cf\n\"\"\"\n\nraw_layer = layers[\"raw\"]\n\"\"\"\n&lt;Compressed Sparse Row sparse matrix of dtype 'int64'\n        with 2076576 stored elements and shape (2638, 11505)&gt;\n  Coords        Values\n  (0, 19)       1\n  (0, 52)       1\n  (0, 58)       2\n  (0, 118)      1\n  (0, 131)      1\n  ...\n  (2637, 11493) 1\n  (2637, 11494) 7\n  (2637, 11498) 1\n  (2637, 11501) 1\n  (2637, 11504) 3\n\"\"\"\n\nraw_df = pd.DataFrame(raw_layer.todense(), index=adata.obs_names, columns=adata.var_names)\nraw_df = pd.DataFrame(raw_layer.toarray(), index=adata.obs_names, columns=adata.var_names)\nraw_df = adata.to_df(layer=\"raw\")\n\"\"\"\ngene_names        LINC00115  NOC2L  KLHL17  PLEKHN1  HES4  ISG15  AGRN  C1orf159  ...  MT-ATP6  MT-CO3  MT-ND3  MT-ND4L  MT-ND4  MT-ND5  MT-ND6  MT-CYB\ncell_barcode                                                                      ...                                                                  \nAAACATACAACCAC-1          0      0       0        0     0      0     0         0  ...        5       5       1        0      10       1       0       4\nAAACATTGAGCTAC-1          0      0       0        0     0      0     0         0  ...       11      15       2        0      33       1       0       8\nAAACATTGATCAGC-1          0      0       0        0     0      1     0         0  ...        0       4       0        0       3       2       0       4\nAAACCGTGCTTCCG-1          0      0       0        0     0      9     0         0  ...        5       4       0        1       3       2       0       2\nAAACCGTGTATGCG-1          0      0       0        0     0      0     0         0  ...        0       1       0        0       0       2       0       1\n...                     ...    ...     ...      ...   ...    ...   ...       ...  ...      ...     ...     ...      ...     ...     ...     ...     ...\nTTTCGAACTCTCAT-1          0      0       0        0     0     14     0         0  ...        0       8       1        0       1       0       0       1\nTTTCTACTGAGGCA-1          0      0       0        0     0      1     0         0  ...        0       7       0        1       2       1       0       4\nTTTCTACTTCCTCG-1          0      0       0        0     0      0     0         0  ...        4       7       0        0       7       0       0       4\nTTTGCATGAGAGGC-1          0      0       0        0     0      0     0         0  ...        2       2       0        1       0       0       0       1\nTTTGCATGCCTCAC-1          0      0       0        0     0      0     0         0  ...        0       1       0        0       1       0       0       3\n\n[2638 rows x 11505 columns]\n\"\"\"\n\ngenes_of_interest = [\"CD8A\", \"CD4\", \"KLRB1\"]\nfig = plt.figure(figsize=(20, 5))\nax = fig.add_subplot(1, 2, 1)\nax.set_title(\"raw counts\")\nsc.pl.matrixplot(\n    adata,\n    groupby=\"louvain_cell_types\",\n    var_names=genes_of_interest,\n    layer=\"raw\",\n    ax=ax,\n    show=True\n)\n</code></pre> <pre><code>layers[\"counts_per_million\"] = raw_layer.copy()\n\"\"\"\nLayers with keys: raw, counts_per_million\n\"\"\"\n\n# \u6bcf\u4e2a\u7ec6\u80de\u4e2d\u6bcf\u4e2a\u57fa\u56e0\u7684\u8868\u8fbe\u6bd4\u4f8b*10**6\nsc.pp.normalize_total(adata, target_sum=10**6, layer=\"counts_per_million\", inplace=True)\n</code></pre> <pre><code>cpm_layer = layers[\"counts_per_million\"]\n\"\"\"\n&lt;Compressed Sparse Row sparse matrix of dtype 'float64'\n        with 2076576 stored elements and shape (2638, 11505)&gt;\n  Coords        Values\n  (0, 19)       431.77892918825563\n  (0, 52)       431.77892918825563\n  (0, 58)       863.5578583765113\n  (0, 118)      431.77892918825563\n  (0, 131)      431.77892918825563\n  ...\n  (2637, 11493) 527.9831045406547\n  (2637, 11494) 3695.881731784583\n  (2637, 11498) 527.9831045406547\n  (2637, 11501) 527.9831045406547\n  (2637, 11504) 1583.949313621964\n\"\"\"\n\ncpm_df = pd.DataFrame(cpm_layer.todense(), index=adata.obs_names, columns=adata.var_names)\ncpm_df = pd.DataFrame(cpm_layer.toarray(), index=adata.obs_names, columns=adata.var_names)\ncpm_df = adata.to_df(layer=\"counts_per_million\")\n\"\"\"\ngene_names        LINC00115  NOC2L  KLHL17  PLEKHN1  HES4        ISG15  ...      MT-ND3      MT-ND4L       MT-ND4       MT-ND5  MT-ND6       MT-CYB\ncell_barcode                                                            ...                                                                        \nAAACATACAACCAC-1        0.0    0.0     0.0      0.0   0.0     0.000000  ...  431.778929     0.000000  4317.789292   431.778929     0.0  1727.115717\nAAACATTGAGCTAC-1        0.0    0.0     0.0      0.0   0.0     0.000000  ...  424.358158     0.000000  7001.909612   212.179079     0.0  1697.432633\nAAACATTGATCAGC-1        0.0    0.0     0.0      0.0   0.0   334.001336  ...    0.000000     0.000000  1002.004008   668.002672     0.0  1336.005344\nAAACCGTGCTTCCG-1        0.0    0.0     0.0      0.0   0.0  3560.126582  ...    0.000000   395.569620  1186.708861   791.139241     0.0   791.139241\nAAACCGTGTATGCG-1        0.0    0.0     0.0      0.0   0.0     0.000000  ...    0.000000     0.000000     0.000000  2157.497303     0.0  1078.748652\n...                     ...    ...     ...      ...   ...          ...  ...         ...          ...          ...          ...     ...          ...\nTTTCGAACTCTCAT-1        0.0    0.0     0.0      0.0   0.0  4221.954162  ...  301.568154     0.000000   301.568154     0.000000     0.0   301.568154\nTTTCTACTGAGGCA-1        0.0    0.0     0.0      0.0   0.0   307.408546  ...    0.000000   307.408546   614.817092   307.408546     0.0  1229.634184\nTTTCTACTTCCTCG-1        0.0    0.0     0.0      0.0   0.0     0.000000  ...    0.000000     0.000000  4345.127250     0.000000     0.0  2482.929857\nTTTGCATGAGAGGC-1        0.0    0.0     0.0      0.0   0.0     0.000000  ...    0.000000  1025.641026     0.000000     0.000000     0.0  1025.641026\nTTTGCATGCCTCAC-1        0.0    0.0     0.0      0.0   0.0     0.000000  ...    0.000000     0.000000   527.983105     0.000000     0.0  1583.949314   \n\n[2638 rows x 11505 columns]\n\"\"\"\n\ngenes_of_interest = [\"CD8A\", \"CD4\", \"KLRB1\"]\nfig = plt.figure(figsize=(20, 5))\nax = fig.add_subplot(1, 2, 2)\nsc.pl.matrixplot(\n    adata,\n    groupby=\"louvain_cell_types\",\n    var_names=genes_of_interest,\n    layer=\"counts_per_million\",\n    ax=ax,\n    show=False\n)\nax.set_title(\"CPM normalization\")\nplt.show()\n</code></pre>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#observations-x-nobs","title":"\u7ec6\u80de\u4fe1\u606f(observations x n)\uff1aobs","text":"<pre><code>\u50a8\u5b58\u4e3aDataFrame\u5bf9\u8c61\n</code></pre> <pre><code>obs = adata.obs\n\"\"\"\n                    n_genes  percent_mito  n_counts louvain_cell_types\ncell_barcode                                                        \nAAACATACAACCAC-1      781      0.030178    2419.0        CD4 T cells\nAAACATTGAGCTAC-1     1352      0.037936    4903.0            B cells\nAAACATTGATCAGC-1     1131      0.008897    3147.0        CD4 T cells\nAAACCGTGCTTCCG-1      960      0.017431    2639.0    CD14+ Monocytes\nAAACCGTGTATGCG-1      522      0.012245     980.0           NK cells\n...                   ...           ...       ...                ...\nTTTCGAACTCTCAT-1     1155      0.021104    3459.0    CD14+ Monocytes\nTTTCTACTGAGGCA-1     1227      0.009294    3443.0            B cells\nTTTCTACTTCCTCG-1      622      0.021971    1684.0            B cells\nTTTGCATGAGAGGC-1      454      0.020548    1022.0            B cells\nTTTGCATGCCTCAC-1      724      0.008065    1984.0        CD4 T cells\n\n[2638 rows x 4 columns]\n\"\"\"\n\nobs_index = obs.index\n\"\"\"\nIndex(['AAACATACAACCAC-1', 'AAACATTGAGCTAC-1', 'AAACATTGATCAGC-1',\n       'AAACCGTGCTTCCG-1', 'AAACCGTGTATGCG-1', 'AAACGCACTGGTAC-1',\n       'AAACGCTGACCAGT-1', 'AAACGCTGGTTCTT-1', 'AAACGCTGTAGCCA-1',\n       'AAACGCTGTTTCTG-1',\n       ...\n       'TTTCAGTGTCACGA-1', 'TTTCAGTGTCTATC-1', 'TTTCAGTGTGCAGT-1',\n       'TTTCCAGAGGTGAG-1', 'TTTCGAACACCTGA-1', 'TTTCGAACTCTCAT-1',\n       'TTTCTACTGAGGCA-1', 'TTTCTACTTCCTCG-1', 'TTTGCATGAGAGGC-1',\n       'TTTGCATGCCTCAC-1'],\n      dtype='object', name='cell_barcode', length=2638)\n\"\"\"\n\nobs_columns = obs.columns\n\"\"\"\nIndex(['n_genes', 'percent_mito', 'n_counts', 'louvain_cell_types'], dtype='object')\n\"\"\"\n</code></pre>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#variables-x-nvar","title":"\u57fa\u56e0\u4fe1\u606f(variables x n)\uff1avar","text":"<p>\u50a8\u5b58\u4e3aDataFrame\u5bf9\u8c61</p> <pre><code>var = adata.var\n\"\"\"\n           gene_names  n_cells         gene_ids\ngene_names                                     \nLINC00115   LINC00115       18  ENSG00000225880\nNOC2L           NOC2L      258  ENSG00000188976\nKLHL17         KLHL17        9  ENSG00000187961\nPLEKHN1       PLEKHN1        7  ENSG00000187583\nHES4             HES4      145  ENSG00000188290\n...               ...      ...              ...\nMT-ND4L       MT-ND4L      398  ENSG00000212907\nMT-ND4         MT-ND4     2588  ENSG00000198886\nMT-ND5         MT-ND5     1399  ENSG00000198786\nMT-ND6         MT-ND6      249  ENSG00000198695\nMT-CYB         MT-CYB     2517  ENSG00000198727\n\n[11505 rows x 3 columns]\n\"\"\"\n\nvar_index = var.index\n\"\"\"\nIndex(['LINC00115', 'NOC2L', 'KLHL17', 'PLEKHN1', 'HES4', 'ISG15', 'AGRN',\n       'C1orf159', 'TNFRSF18', 'TNFRSF4',\n       ...\n       'MT-CO2', 'MT-ATP8', 'MT-ATP6', 'MT-CO3', 'MT-ND3', 'MT-ND4L', 'MT-ND4',\n       'MT-ND5', 'MT-ND6', 'MT-CYB'],\n      dtype='object', name='gene_names', length=11505)\n\"\"\"\n\nvar_columns = var.columns\n\"\"\"\nIndex(['gene_names', 'n_cells', 'gene_ids'], dtype='object')\n\"\"\"\n</code></pre>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#observations-nobsm","title":"\u591a\u7ef4\u7ec6\u80de\u6ce8\u91ca(observations \u00d7 n)\uff1aobsm","text":"<p>\u50a8\u5b58\u4e3a\u4e8c\u7ef4\u6570\u7ec4</p> <pre><code>obsm = adata.obsm\n\"\"\"\nAxisArrays with keys: X_pca, X_tsne, X_umap\n\"\"\"\n</code></pre> <pre><code>pca = obsm[\"X_pca\"]\npca_shape = pca.shape     # (2638, 50)\n\"\"\"\n[[ 5.556233    0.2577139  -0.18681023 ...  0.02760133  2.6710324  -0.29762036]\n [ 7.20953     7.4819846   0.16270587 ...  2.930932    0.3541974  -1.081801  ]\n [ 2.6944375  -1.5836583  -0.6631259  ...  1.0847819   0.3814702   0.06466176]\n ...\n [ 0.7853974   6.7185917   1.5988477  ... -1.1818857   0.9509114  -0.29782164]\n [-0.2812718   5.921856    1.1628779  ... -0.93838155  0.3433971  -1.0069869 ]\n [ 0.09076738  0.66350496  0.13484418 ...  1.6905508   0.26859125  -0.9084492 ]]\n\"\"\"\n\npca_df = pd.DataFrame(pca, index=adata.obs_names)\n\"\"\"\n                         0         1         2         3         4         5   ...        44        45        46        47        48        49\ncell_barcode                                                                   ...\nAAACATACAACCAC-1   5.556233  0.257714 -0.186810  2.800131 -0.033783 -0.189702  ... -0.686898 -1.419867 -2.865078  0.027601  2.671032 -0.297620        \nAAACATTGAGCTAC-1   7.209530  7.481985  0.162706 -8.018575  3.012900  0.322293  ...  0.955408  0.068133 -0.883082  2.930932  0.354197 -1.081801        \nAAACATTGATCAGC-1   2.694438 -1.583658 -0.663126  2.205649 -1.686360 -1.965395  ... -0.831818 -0.236549  1.883515  1.084782  0.381470  0.064662        \nAAACCGTGCTTCCG-1 -10.143295 -1.368530  1.209812 -0.700096 -2.872336  0.230617  ...  0.543566  3.156763  1.691134 -0.301377 -0.225427  0.962879        \nAAACCGTGTATGCG-1  -1.112816 -8.152788  1.332405 -4.252473  2.036407  5.597797  ...  0.586381  0.636326 -1.451625  1.809683 -0.087072 -0.737833        \n...                     ...       ...       ...       ...       ...       ...  ...       ...       ...       ...       ...       ...       ...        \nTTTCGAACTCTCAT-1  -9.601189 -0.180182  1.452586 -0.237521  5.016192 -2.838224  ...  0.145743  3.023428  0.584328 -0.985668 -0.653246 -0.255705        \nTTTCTACTGAGGCA-1   2.847881  3.722198 -0.217027 -4.692667 -0.201969  0.136037  ...  2.293771 -1.135456 -0.613224 -0.121579  0.416659  1.059371        \nTTTCTACTTCCTCG-1   0.785397  6.718592  1.598848 -4.170253 -0.792333  0.984998  ... -0.895456 -1.512018  0.383293 -1.181886  0.950911 -0.297822        \nTTTGCATGAGAGGC-1  -0.281272  5.921856  1.162878 -7.346007 -0.433892 -0.143446  ...  2.175339 -1.710460 -1.163464 -0.938382  0.343397 -1.006987        \nTTTGCATGCCTCAC-1   0.090767  0.663505  0.134844  2.715871 -1.046663  0.234724  ... -0.557173 -0.257671 -0.363603  1.690551  0.268591 -0.908449\n\n[2638 rows x 50 columns]\n\"\"\"\n\nfig = plt.figure(figsize = (15,15))\nax = fig.add_subplot(2,2,1)\nsns.scatterplot(\n                data=pca_df,\n                x=0,\n                y=1,\n                hue=obs.loc[:, \"louvain_cell_types\"]\n                )\nax.set_title(\"PCA\")\nax.axis(\"off\")\nplt.show()\n</code></pre> <pre><code>tsne = obsm[\"X_tsne\"]\ntsne_shape = tsne.shape    # (2638, 2)\n\"\"\"\n[[13.15872094  7.006185  ]\n [37.95347415  6.56070167]\n [-2.55932453 -3.56711525]\n ...\n [32.12078558 -0.81853631]\n [36.0870687  -3.09092694]\n [-2.94501324  9.52100551]]\n\"\"\"\n\ntsne_df = pd.DataFrame(tsne, index=adata.obs_names)\n\"\"\"\n                          0          1\ncell_barcode\nAAACATACAACCAC-1  13.158721   7.006185\nAAACATTGAGCTAC-1  37.953474   6.560702\nAAACATTGATCAGC-1  -2.559325  -3.567115\nAAACCGTGCTTCCG-1 -32.373788  -2.071373\nAAACCGTGTATGCG-1   7.196922 -27.119968\n...                     ...        ...\nTTTCGAACTCTCAT-1 -21.379159  -6.220417\nTTTCTACTGAGGCA-1  34.445376   3.751619\nTTTCTACTTCCTCG-1  32.120786  -0.818536\nTTTGCATGAGAGGC-1  36.087069  -3.090927\nTTTGCATGCCTCAC-1  -2.945013   9.521006\n\n[2638 rows x 2 columns]\n\"\"\"\n\nfig = plt.figure(figsize = (15,15))\nax = fig.add_subplot(2,2,2)\nsns.scatterplot(\n                data=tsne_df,\n                x=0,\n                y=1,\n                hue=obs.loc[:, \"louvain_cell_types\"],\n                )\nax.set_title(\"t-SNE\")\nax.axis(\"off\")\nplt.show()\n</code></pre> <pre><code>umap = obsm[\"X_umap\"]\numap_shape = umap.shape    # (2638, 2)\n\"\"\"\n[[ 1.35285574  2.26612719]\n [-0.47802448  7.87730423]\n [ 2.16588875 -0.24481226]\n ...\n [ 0.34670979  8.34967798]\n [ 0.19864146  9.56698797]\n [ 2.62803322  0.36722543]]\n\"\"\"\n\numap_df = pd.DataFrame(umap, index=adata.obs_names)\n\"\"\"\n                         0         1\ncell_barcode\nAAACATACAACCAC-1  1.352856  2.266127\nAAACATTGAGCTAC-1 -0.478024  7.877304\nAAACATTGATCAGC-1  2.165889 -0.244812\nAAACCGTGCTTCCG-1 -8.695493  4.516541\nAAACCGTGTATGCG-1  2.065218 -4.185123\n...                    ...       ...\nTTTCGAACTCTCAT-1 -9.092272  5.392429\nTTTCTACTGAGGCA-1 -0.129078  7.488598\nTTTCTACTTCCTCG-1  0.346710  8.349678\nTTTGCATGAGAGGC-1  0.198641  9.566988\nTTTGCATGCCTCAC-1  2.628033  0.367225\n\n[2638 rows x 2 columns]\n\"\"\"\n\nfig = plt.figure(figsize = (15,15))\nax = fig.add_subplot(2,2,3)\nsns.scatterplot(\n                data=umap_df,\n                x=0,\n                y=1,\n                hue=obs.loc[:, \"louvain_cell_types\"],\n                )\nax.set_title(\"UMAP\")\nax.axis(\"off\")\nplt.show()\n</code></pre> <p></p>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#variables-x-nvarm","title":"\u591a\u7ef4\u57fa\u56e0\u6ce8\u91ca(variables x n)\uff1avarm","text":"<p>\u50a8\u5b58\u4e3a\u4e8c\u7ef4\u6570\u7ec4\uff0c\u64cd\u4f5c\u540cobsm</p> <pre><code>varm = adata.varm\n\"\"\"\nAxisArrays with keys: \n\"\"\"\n</code></pre>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#observations-observationsobsp","title":"\u914d\u5bf9\u7ec6\u80de\u6570\u636e(observations \u00d7 observations)\uff1aobsp","text":"<p>\u50a8\u5b58\u4e3a\u6210\u5bf9\u7ec6\u80de-\u7ec6\u80de\u4e8c\u7ef4\u6570\u7ec4</p> <pre><code>obsp = adata.obsp\n\"\"\"\nPairwiseArrays with keys: distances_all\n\"\"\"\n</code></pre> <pre><code>distances_all = obsp[\"distances_all\"]\ndistances_all_shape = distances_all.shape    # (2638, 2638)\n\"\"\"\n[[ 0.         18.98223389 15.39625646 ... 17.44791227 19.66225537  13.4530516 ]\n [18.98223389  0.         21.37320952 ... 17.39917931 16.59099551  20.29010799]\n [15.39625646 21.37320952  0.         ... 17.48199881 19.54703132  13.22466662]\n ...\n [17.44791227 17.39917931 17.48199881 ...  0.         14.53959947  14.15720293]\n [19.66225537 16.59099551 19.54703132 ... 14.53959947  0.          16.96518854]\n [13.4530516  20.29010799 13.22466662 ... 14.15720293 16.96518854   0.        ]]\n\"\"\"\n\ndistances_all_sorted = adata[obs.sort_values(by=\"louvain_cell_types\").index, :].obsp[\"distances_all\"]\ndistances_all_df = pd.DataFrame(distances_all_sorted, index=adata.obs_names, columns=adata.obs_names)\n\"\"\"\ncell_barcode      AAACATACAACCAC-1  AAACATTGAGCTAC-1  AAACATTGATCAGC-1  ...  TTTCTACTTCCTCG-1  TTTGCATGAGAGGC-1  TTTGCATGCCTCAC-1\ncell_barcode                                                            ...                                                      \nAAACATACAACCAC-1          0.000000         16.104582         14.325944  ...         76.593592         31.585287         23.444168\nAAACATTGAGCTAC-1         16.104582          0.000000         14.296034  ...         76.680071         30.718100         23.483993\nAAACATTGATCAGC-1         14.325944         14.296034          0.000000  ...         76.569770         32.117569         23.052329\nAAACCGTGCTTCCG-1         15.520631         15.872469         13.664186  ...         76.411524         30.303859         21.365050\nAAACCGTGTATGCG-1         12.881724         14.350844         11.769647  ...         76.188423         29.946851         21.060596\n...                            ...               ...               ...  ...               ...               ...               ...\nTTTCGAACTCTCAT-1         65.862369         64.294692         65.532948  ...         33.617291         46.140674         53.813607\nTTTCTACTGAGGCA-1         41.696160         40.825239         41.954897  ...         51.643448         28.894290         35.182130\nTTTCTACTTCCTCG-1         76.593592         76.680071         76.569770  ...          0.000000         59.064268         67.991645\nTTTGCATGAGAGGC-1         31.585287         30.718100         32.117569  ...         59.064268          0.000000         24.214457\nTTTGCATGCCTCAC-1         23.444168         23.483993         23.052329  ...         67.991645         24.214457          0.000000\n\n[2638 rows x 2638 columns]\n\"\"\"\n\nfig = plt.figure(figsize = (15, 15))\nax = fig.gca()\nsns.heatmap(distances_all_df, ax=ax)\nax.set_aspect(\"equal\")\nplt.show()\n</code></pre> <p></p>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#variables-x-variables-varp","title":"\u914d\u5bf9\u57fa\u56e0\u6570\u636e(variables x variables )\uff1avarp","text":"<p>\u50a8\u5b58\u4e3a\u6210\u5bf9\u57fa\u56e0-\u57fa\u56e0\u4e8c\u7ef4\u6570\u7ec4\uff0c\u64cd\u4f5c\u540cobsp</p> <pre><code>varp = adata.varp\n\"\"\"\nPairwiseArrays with keys: \n\"\"\"\n</code></pre>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#uns","title":"\u975e\u7ed3\u6784\u5316\u6ce8\u91ca\uff1auns","text":"<pre><code>uns = adata.uns\n\"\"\"\n{\n 'louvain': {\n             'params': {\n                        'random_state': array([0]), \n                        'resolution': array([1])\n                        }\n             }, \n 'louvain_colors': array(['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', \n                          '#9467bd', '#8c564b', '#e377c2', '#bcbd22'], dtype=object), \n 'pca': {\n         'variance': array([32.11044  , 18.718647 , 15.607319 , 13.235274 ,  4.8012376,\n                             3.977329 ,  3.5053132,  3.1576602,  3.028463 ,  2.9777625,\n                             2.8842385,  2.8583548,  2.849085 ,  2.8220255,  2.811057 ,\n                             2.781576 ,  2.7436602,  2.7404478,  2.736062 ,  2.6872916,\n                             2.671316 ,  2.6690092,  2.6442325,  2.6394093,  2.6157827,\n                             2.6102393,  2.575101 ,  2.5691617,  2.563295 ,  2.5489197,\n                             2.5080354,  2.4762378,  2.264355 ,  2.1844513,  2.1353922,\n                             2.096509 ,  2.0606086,  2.0105643,  1.9703175,  1.9465197,\n                             1.9220033,  1.8847997,  1.8349565,  1.8038161,  1.7930729,\n                             1.7611799,  1.7322571,  1.721284 ,  1.6937429,  1.6519767], dtype=float32), \n         'variance_ratio': array([0.02012818, 0.01173364, 0.00978333, 0.00829643, 0.00300962,\n                                  0.00249316, 0.00219728, 0.00197936, 0.00189837, 0.00186659,\n                                  0.00180796, 0.00179174, 0.00178593, 0.00176896, 0.00176209,\n                                  0.00174361, 0.00171984, 0.00171783, 0.00171508, 0.00168451,\n                                  0.00167449, 0.00167305, 0.00165752, 0.00165449, 0.00163968,\n                                  0.00163621, 0.00161418, 0.00161046, 0.00160678, 0.00159777,\n                                  0.00157214, 0.00155221, 0.00141939, 0.00136931, 0.00133855,\n                                  0.00131418, 0.00129168, 0.00126031, 0.00123508, 0.00122016,\n                                  0.00120479, 0.00118147, 0.00115023, 0.00113071, 0.00112397,\n                                  0.00110398, 0.00108585, 0.00107897, 0.00106171, 0.00103553], dtype=float32)\n         }\n}\n\"\"\"\n\nuns_keys = uns.keys()\n\"\"\"\ndict_keys(['louvain', 'louvain_colors', 'pca'])\n\"\"\"\n</code></pre>"},{"location":"%E5%8D%95%E7%BB%86%E8%83%9E/01.%2BAnData%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%2Bf42be259-849d-43ee-bd34-e610de1f0ede/#_4","title":"\u53c2\u8003","text":"<p>Getting started with the anndata package</p> <p>1-4 \u5206\u6790\u6846\u67b6\u548c\u5de5\u5177 - single_cell_tutorial Readthedocs</p>"}]}